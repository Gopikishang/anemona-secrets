{
  "version": 3,
  "file": "App.css",
  "sources": [
    "About.svelte",
    "Bye.svelte",
    "Index.svelte",
    "Content.svelte",
    "Element.svelte",
    "Login.svelte",
    "Logout.svelte",
    "Clipboard.svelte",
    "Spinner.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import Lang from \"../services/Lang\";\r\n</script>\r\n\r\n<div class=\"m1\">\r\n  <div class=\"center\">\r\n    <span class=\"logo\" />\r\n    <div class=\"mb2\">\r\n      <strong>{Lang.get('password-manager')}</strong>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    {Lang.get(\"about-text\")}\r\n  </div>\r\n  <div class=\"opts mt2\">\r\n    <div class=\"mb2\"><strong>{Lang.get(\"contributing\")}</strong></div>\r\n    <p>\r\n      {Lang.get(\"please-create-an-issue\")}\r\n    </p>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .logo {\r\n    display: inline-block;\r\n    width: 171px;\r\n    height: 171px;\r\n    background-image: url(../logo.png);\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import Lang from \"../services/Lang\";\r\n</script>\r\n\r\n<div>\r\n  <span class=\"dizzy\" />\r\n  <div><strong>{Lang.get(\"unknown-problem-occurred\")}</strong></div>\r\n  <div class=\"opts mt2\">\r\n    <div>{Lang.get(\"alternatives\")}:</div>\r\n    <ul>\r\n      <li> &bull; {Lang.get(\"please-refresh\")}</li>\r\n      <li> &bull; {Lang.get(\"close-and-open\")}</li>\r\n      <li> &bull; {Lang.get(\"sign-out-and-sign\")}</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .dizzy {\r\n    display: block;\r\n    width: 48px;\r\n    height: 48px;\r\n    background-image: url(../assets/images/face-worried.png);\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import Spinner from \"./components/Spinner.svelte\";\r\n  import Login from \"./Login.svelte\";\r\n  import About from \"./About.svelte\";\r\n  import Logout from \"./Logout.svelte\";\r\n  import Page from \"../services/Page\";\r\n  import Lang from \"../services/Lang\";\r\n  import Command from \"../services/Command\";\r\n  import Session from \"../services/Session\";\r\n  import State from \"../services/State\";\r\n  import Keys from \"./Keys.svelte\";\r\n  import Bye from \"./Bye.svelte\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  let logs = \"\";\r\n  let vType = \"sidebar\";\r\n  let yScroll = 0;\r\n  let current = Spinner;\r\n  let idCurrent = \"spinner\";\r\n  let pages = {\r\n    about: About,\r\n    keys: Keys,\r\n    login: Login,\r\n    logout: Logout,\r\n  };\r\n\r\n  const saveScroller = () => {\r\n    yScroll = yScroll ? yScroll : State.get(\"scroll_\" + idCurrent, 0.01);\r\n    State.set(\"scroll_\" + idCurrent, yScroll);\r\n  };\r\n\r\n  const setComponet = (componet) => {\r\n    current = componet;\r\n  };\r\n\r\n  const onPage = (cmd, dat) => {\r\n    setComponet(Spinner);\r\n    idCurrent = cmd.shift();\r\n    let pag = pages;\r\n    if (idCurrent) {\r\n      if (pag[idCurrent] && idCurrent !== \"closed\") Page.set(idCurrent);\r\n      else {\r\n        if (vType === \"sidebar\" && idCurrent !== \"closed\") idCurrent = \"keys\";\r\n        else return setComponet(Bye);\r\n      }\r\n      return setComponet(pag[idCurrent]);\r\n    }\r\n    setComponet(Bye);\r\n  };\r\n\r\n  const addCommandListener = () => {\r\n    window.addEventListener(\"message\", async (event) => {\r\n      const rd = event.data || {};\r\n      if (Command.call(rd)) return;\r\n      const cmd = rd.cmd.split(\"/\");\r\n      switch (cmd.shift()) {\r\n        case \"reloads\":\r\n          Command.send(\"reloads\");\r\n          return start();\r\n        case \"reload\":\r\n          return start();\r\n        case \"lang\":\r\n          return Lang.load(rd.dat, rd.dat);\r\n        case \"loading\":\r\n          return setComponet(Spinner);\r\n      }\r\n      onPage(cmd);\r\n    });\r\n  };\r\n\r\n  const refresh = () => {\r\n    //\r\n  };\r\n  \r\n  const start = () => {\r\n    setComponet(Spinner);\r\n    Session.auth(vType);\r\n  };\r\n\r\n  onMount(() => {\r\n    vType = document.body.id;\r\n    Page.addEventListener((page) => onPage([page]));\r\n    addCommandListener();\r\n    start();\r\n  });\r\n</script>\r\n\r\n<div class=\"anemona-app\">\r\n  <svelte:component this={current} />\r\n</div>\r\n{#if logs !== \"\"}\r\n  <textarea rows=\"10\">{logs}</textarea>\r\n{/if}\r\n<svelte:window on:scroll={saveScroller} bind:scrollY={yScroll} />\r\n\r\n<style>\r\n  :root {\r\n    --container-paddding: 0px;\r\n  }\r\n  .anemona-app {\r\n    padding: 2px;\r\n    overflow-y: scroll; /* Hide vertical scrollbar */\r\n    overflow-x: hidden; /* Hide horizontal scrollbar */\r\n  }\r\n  textarea {\r\n    position: absolute;\r\n    bottom: 0px;\r\n    display: block;\r\n    widows: 100%;\r\n    height: 300px;\r\n    overflow: scroll;\r\n    color: black;\r\n    background-color: white;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import Spinner from \"../components/Spinner.svelte\";\r\n  import Element from \"./Element.svelte\";\r\n  import { onMount } from \"svelte\";\r\n  import Command from \"../../services/Command\";\r\n  import State from \"../../services/State\";\r\n  import { lang } from \"../../services/Lang\";\r\n\r\n  export let key = {};\r\n\r\n  let data = [];\r\n  let content = {};\r\n  let current = {};\r\n  let lock = false;\r\n  let inpts = {};\r\n  let open = false;\r\n  let show = \"\";\r\n  let loading = true;\r\n  let order = true;\r\n  let inter = null;\r\n\r\n  const onShow = (ty) => {\r\n    if (ty === 1 && inpts.psw1) inpts.psw1.type = inpts.psw1.type === \"text\" ? \"password\" : \"text\";\r\n    else if (ty === 2 && inpts.psw2) inpts.psw2.type = inpts.psw2.type === \"text\" ? \"password\" : \"text\";\r\n  };\r\n\r\n  const onOpen = (ty) => {\r\n    open = !open;\r\n  };\r\n\r\n  const onExport = () => {\r\n    Command.send(\"keys/export\", { key: key, data: data, format: inpts.format }, (dd) => {\r\n      //\r\n    });\r\n  };\r\n\r\n  const onLock = () => {\r\n    if (inpts.password1 !== inpts.password2) {\r\n      Command.send(\"onInfo\", lang(\"passwords-must-be-the-same\"));\r\n    } else {\r\n      loading = true;\r\n      const rs = content;\r\n      rs.order = order ? 1 : 0;\r\n      rs.data = data;\r\n      Command.send(\"keys/lock\", { key: key, data: rs, pwd: inpts.password1, clue: inpts.clue || \"\" }, (dd) => {\r\n        lock = true;\r\n        loading = false;\r\n        open = false;\r\n        content = dd;\r\n        data = [];\r\n        inpts = {};\r\n      });\r\n    }\r\n  };\r\n\r\n  const onUnLock = () => {\r\n    loading = true;\r\n    Command.send(\"keys/unlock\", { key: key, data: content, pwd: inpts.password1 }, (dd) => {\r\n      if (dd.data && dd.data instanceof Array) {\r\n        content = dd;\r\n        data = content.data;\r\n        lock = false;\r\n        open = false;\r\n        inpts = {};\r\n      } else {\r\n        Command.send(\"onError\", lang(\"invalid-password\"));\r\n      }\r\n      loading = false;\r\n    });\r\n  };\r\n\r\n  const onSave = (id, fields, xfunc, idx) => {\r\n    if (id === \"cancel\") return xfunc();\r\n    loading = true;\r\n    if (id === \"add\") {\r\n      data = [fields].concat(data);\r\n      fields = {};\r\n    } else if (id === \"edit\") {\r\n      data[idx] = fields;\r\n      data = data.concat([]);\r\n    } else if (id === \"del\") {\r\n      data.splice(idx, 1);\r\n      data = data.concat([]);\r\n      fields = {};\r\n    }\r\n    content.data = data;\r\n    Command.send(\"keys/save\", { key: key, data: content }, (dd) => {\r\n      loading = false;\r\n      xfunc(fields);\r\n    });\r\n  };\r\n\r\n  const onOrder = () => {\r\n    if (inter) return;\r\n    inter = setTimeout(() => (inter = null), 500);\r\n    order = !order;\r\n    if (order) {\r\n      data.sort(function (a, b) {\r\n        a = a.title.toLowerCase();\r\n        b = b.title.toLowerCase();\r\n        return a < b ? -1 : a > b ? 1 : 0;\r\n      });\r\n    } else {\r\n      data.sort(function (a, b) {\r\n        a = a.title.toLowerCase();\r\n        b = b.title.toLowerCase();\r\n        return a > b ? -1 : a < b ? 1 : 0;\r\n      });\r\n    }\r\n    content.order = order ? 1 : 0;\r\n    content.data = data;\r\n    Command.send(\"keys/save\", { key: key, data: content }, (dd) => {\r\n      //\r\n    });\r\n    data = data.concat([]);\r\n  };\r\n\r\n  onMount(() => {\r\n    State.set(\"key\", key);\r\n    Command.send(\"keys/get\", key, (rs) => {\r\n      loading = false;\r\n      if (rs.message || rs.error) {\r\n        State.set(\"key\", undefined);\r\n        return false;\r\n      }\r\n      lock = rs.lock ? true : false;\r\n      content = rs;\r\n      order = rs.order ? true : false;\r\n      data = rs.lock ? [] : content.data || [];\r\n    });\r\n  });\r\n</script>\r\n\r\n{#if loading}\r\n  <Spinner />\r\n{:else if lock}\r\n  <div class=\"flex\">\r\n    <div class=\"title ml1\">{key.name}</div>\r\n  </div>\r\n  <form class=\"bg-box\" on:submit|preventDefault={onUnLock}>\r\n    <div class=\"flex\">\r\n      <button type=\"button\" class=\"icon\" on:click={() => onShow(1)} title={lang(\"see-password\")}><i class=\"fa fa-eye\" /></button>\r\n      <input required bind:this={inpts.psw1} bind:value={inpts.password1} placeholder={lang(\"password\")} type=\"password\" />\r\n    </div>\r\n    <div class=\"flex mt2\">\r\n      <button type=\"submit\">{lang(\"unlock\")}</button>\r\n    </div>\r\n    {#if content.clue && content.clue !== \"*\"}\r\n      <div class=\"note\">\r\n        {lang(\"hint-or-clue\")}: \"{content.clue}\"\r\n      </div>\r\n    {/if}\r\n  </form>\r\n{:else}\r\n  <div class=\"flex\">\r\n    <div class=\"title ml1\">{key.name}</div>\r\n    <span class=\"xicon fa-solid fa-arrow-up-{order ? 'a-z' : 'z-a'}\" on:click={onOrder} title={lang(\"sort-list\")} />\r\n    <span class=\"xicon show fas {open ? 'fa-angle-down' : 'fa-ellipsis'}\" on:click={onOpen} title={lang(\"options\")} />\r\n  </div>\r\n  {#if open}\r\n    <div class=\"toobars\">\r\n      <button class=\"btn\" on:click={() => (show = show == \"lock\" ? \"\" : \"lock\")} title={lang(\"lock-keychain\")}>\r\n        <span class=\"fa fa-lock-open\" />\r\n      </button>\r\n      <button class=\"btn\" on:click={() => (show = show == \"export\" ? \"\" : \"export\")} title={lang(\"export\")}>\r\n        <span class=\"fas fa-file-export\" />\r\n      </button>\r\n    </div>\r\n    {#if show === \"lock\"}\r\n      <form class=\"bg-box\" on:submit|preventDefault={onLock}>\r\n        <div class=\"flex\">\r\n          <button type=\"button\" class=\"icon\" on:click={() => onShow(1)} title={lang(\"see-password\")}><i class=\"fa fa-eye\" /></button>\r\n          <input required bind:this={inpts.psw1} bind:value={inpts.password1} placeholder={lang(\"password\")} type=\"password\" />\r\n        </div>\r\n        <div class=\"flex\">\r\n          <button type=\"button\" class=\"icon\" on:click={() => onShow(2)}><i class=\"fa fa-eye\" /></button>\r\n          <input required bind:this={inpts.psw2} bind:value={inpts.password2} placeholder={lang(\"confirm-password\")} type=\"password\" />\r\n        </div>\r\n        <div class=\"flex\">\r\n          <input bind:value={inpts.clue} placeholder={lang(\"hint-or-clue\")} type=\"text\" />\r\n        </div>\r\n        <div class=\"flex mt2\">\r\n          <button type=\"submit\">{lang(\"lock-keychain\")}</button>\r\n        </div>\r\n        <div class=\"note\">\r\n          <i class=\"fas fa-exclamation\" />\r\n          {lang(\"alert-lock-keys\")}\r\n        </div>\r\n      </form>\r\n    {:else if show === \"export\"}\r\n      <form class=\"bg-box\" on:submit|preventDefault={onExport}>\r\n        <div>\r\n          <select class=\"select\" bind:value={inpts.format}>\r\n            <option value=\"txt\">Plain text</option>\r\n            <option value=\"json\">Json</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"flex mt2\">\r\n          <button type=\"submit\">{lang(\"export\")}</button>\r\n        </div>\r\n      </form>\r\n    {/if}\r\n  {/if}\r\n  <div class=\"mt1\">\r\n    <Element type=\"add\" id=\"add\" data={current} {onSave} />\r\n    {#each data as dat, idx}\r\n      <Element type=\"item\" id={idx} data={dat} {onSave} />\r\n    {/each}\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .xicon {\r\n    display: block;\r\n    font-size: 1rem;\r\n    padding: 2px;\r\n    margin: 2px;\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n  }\r\n  .xicon:hover {\r\n    opacity: 1;\r\n  }\r\n  .btn {\r\n    font-size: 0.8rem;\r\n    float: right;\r\n    width: 22px;\r\n    height: 22px;\r\n    display: block;\r\n    margin-left: 2px;\r\n  }\r\n  input {\r\n    height: 26px;\r\n  }\r\n  form {\r\n    padding: 2px;\r\n  }\r\n  .toobars {\r\n    background-color: var(--vscode-keybindingLabel-background);\r\n    border-top: 1px solid var(--vscode-editorWidget-background);\r\n    padding: 2px;\r\n    width: 100%;\r\n    display: block;\r\n    height: 26px;\r\n  }\r\n  .bg-box {\r\n    background-color: var(--vscode-keybindingLabel-background);\r\n  }\r\n  button {\r\n    font-size: 0.9rem;\r\n  }\r\n  .note {\r\n    color: var(--vscode-textPreformat-foreground);\r\n    font-size: 0.8rem;\r\n    padding: 2px;\r\n    opacity: 0.7;\r\n  }\r\n  .icon {\r\n    width: 22px;\r\n    height: 26px;\r\n  }\r\n  .title {\r\n    width: calc(100% - 26px);\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n</style>\r\n",
    "<script>\r\n    import { onMount } from \"svelte\";\r\n    import Command from \"../../services/Command\";\r\n    import Clipboard from \"../components/Clipboard.svelte\";\r\n    import Lang, { lang, langKey } from \"../../services/Lang\";\r\n\r\n    export let id = \"\";\r\n    export let data = {};\r\n    export let type = \"add\";\r\n    export let onSave = (text) => {};\r\n\r\n    let show = \"new\";\r\n    let disabled = {};\r\n    let resp = {};\r\n    let passwd = null;\r\n    let open = false;\r\n\r\n    let items = [];\r\n    let options = [];\r\n    let opts = [\"nick\", \"email\", \"token\", \"host\", \"web\", \"link\", \"tel\", \"api\", \"ip\", \"port\", \"db-name\", \"notes\"];\r\n    let itemValue = \"0\";\r\n\r\n    const clone = (dd) => {\r\n        if (!dd) return {};\r\n        let rs = {};\r\n        for (const x in dd) rs[x] = dd[x];\r\n        return rs;\r\n    };\r\n    const getOptions = () => {\r\n        let idx = -1;\r\n        options = opts.concat([]);\r\n        items = [];\r\n        for (const name in data) {\r\n            if (name === \"password\" || name === \"title\") continue;\r\n            items.push(name);\r\n            idx = options.indexOf(name);\r\n            if (idx !== -1) options.splice(idx, 1);\r\n        }\r\n        items.sort();\r\n        options.sort();\r\n    };\r\n    const setShowData = (_data, _type, _resp) => {\r\n        show = _type || type;\r\n        data = _data || {};\r\n        resp = _resp || clone(_data) || {};\r\n        getOptions();\r\n    };\r\n    const onCancel = () => {\r\n        setShowData(clone(resp), type, resp);\r\n    };\r\n    const onShow = () => {\r\n        if (passwd) passwd.type = passwd.type === \"text\" ? \"password\" : \"text\";\r\n    };\r\n    const onEdit = () => {\r\n        onSave(id === \"add\" ? \"add\" : \"edit\", clone(data), (dd) => setShowData(id === \"add\" ? {} : dd, type), id);\r\n    };\r\n    const onDelete = () => {\r\n        onSave(\"del\", data, (dd) => setShowData({}), id);\r\n    };\r\n    const showEdit = () => {\r\n        setShowData(clone(resp), \"edit\", resp);\r\n    };\r\n    const onAddItem = () => {\r\n        if (itemValue !== \"0\") {\r\n            data[itemValue] = resp[itemValue] || data[itemValue] || \"\";\r\n            getOptions();\r\n        }\r\n    };\r\n    const onDelItem = (itm) => {\r\n        resp[itm] = data[itm];\r\n        delete data[itm];\r\n        getOptions();\r\n    };\r\n    onMount(() => {\r\n        setShowData(id === \"add\" ? {} : data, type, clone(data));\r\n        disabled = {\r\n            nick: !!data.nick,\r\n            link: !!data.link,\r\n            notes: !!data.notes,\r\n        };\r\n    });\r\n</script>\r\n\r\n<div>\r\n    {#if show === \"new\" || show === \"edit\"}\r\n        <form class=\"bg-box p1\" on:submit|preventDefault={onEdit}>\r\n            <input required bind:value={data.title} placeholder={lang(\"title\")} type=\"text\" />\r\n            <div class=\"flex\">\r\n                <button type=\"button\" class=\"icon\" on:click={onShow} title={lang(\"see-password\")}><i class=\"fa fa-eye\" /></button>\r\n                <input required bind:this={passwd} bind:value={data.password} placeholder={lang(\"password\")} type=\"password\" />\r\n            </div>\r\n            {#if options.length}\r\n                <div class=\"flex\">\r\n                    <select class=\"select\" bind:value={itemValue}>\r\n                        <option value=\"0\">{Lang.get('select-an-option')}</option>\r\n                        {#each options as op}\r\n                            <option value={op}>{Lang.get(op)}</option>\r\n                        {/each}\r\n                    </select>\r\n                    <button type=\"button\" class=\"icon\" on:click={onAddItem} title={lang(\"see-password\")}><i class=\"fa fa-plus\" /></button>\r\n                </div>\r\n            {/if}\r\n            {#each items as item}\r\n                <div>\r\n                    <span class=\"x-label\">{Lang.get(item)}:</span>\r\n                    <div class=\"flex\">\r\n                        <input type=\"text\" required=\"required\" bind:value={data[item]} placeholder={lang(item)} />\r\n                        <button type=\"button\" class=\"icon btn-cancel\" on:click={() => onDelItem(item)} title=\"Quitar\"><i class=\"fa-solid fa-xmark\" /></button>\r\n                    </div>\r\n                </div>\r\n            {/each}\r\n\r\n            <div class=\"flex mt2\">\r\n                <button class=\"btn-cancel\" type=\"button\" on:click={onCancel}>{lang(\"cancel\")}</button>\r\n                <button type=\"submit\">{lang(\"save\")}</button>\r\n            </div>\r\n        </form>\r\n    {:else if show === \"del\"}\r\n        <form class=\"bg-box p1\" on:submit|preventDefault={onDelete}>\r\n            <div class=\"flex\">\r\n                <input readonly bind:value={data.title} placeholder={lang(\"title\")} type=\"text\" />\r\n            </div>\r\n            <div class=\"flex mt2\">\r\n                <button class=\"btn-cancel\" type=\"button\" on:click={onCancel}>{lang(\"cancel\")}</button>\r\n                <button type=\"submit\">{lang(\"delete\")}</button>\r\n            </div>\r\n        </form>\r\n    {:else if show === \"item\"}\r\n        <div class=\"box-password\">\r\n            <div>\r\n                <div class=\"title\">{data.title}</div>\r\n            </div>\r\n            <div class=\"flex\">\r\n                <Clipboard text={data.password} let:copy on:copy={() => Command.send(\"onInfo\", lang(\"password-clipboard\"))}>\r\n                    <span class=\"xicon fa fa-copy\" title={lang(\"copy\")} on:click={copy} />\r\n                </Clipboard>\r\n                <span class=\"xicon fa fa-eye\" on:click={onShow} title={lang(\"see-password\")} />\r\n                <input class=\"box-pswd\" bind:this={passwd} type=\"password\" value={data.password} />\r\n                <span class=\"xicon show fas {open ? 'fa-angle-down' : 'fa-ellipsis'}\" on:click={() => (open = !open)} title={lang(\"options\")} />\r\n            </div>\r\n            {#if open}\r\n                <div class=\"toobars\">\r\n                    <span class=\"xicon far fa-trash-alt\" on:click={() => (show = \"del\")} title={lang(\"delete\")} />\r\n                    <span class=\"xicon fa fa-edit\" on:click={showEdit} title={lang(\"edit\")} />\r\n                </div>\r\n                <div class=\"\">\r\n                    {#each items as i}\r\n                        {#if i !== \"title\" && i !== \"password\"}\r\n                            <div class=\"flex\">\r\n                                <Clipboard text={data[i]} let:copy on:copy={() => Command.send(\"onInfo\", lang(\"have-copied\") + \": \" + langKey(i))}>\r\n                                    <span class=\"xicon copy fa fa-copy\" title={lang(\"copy\")} on:click={copy} />\r\n                                </Clipboard>\r\n                                <div class=\"other\">\r\n                                    <span>{langKey(i)}</span>\r\n                                    <div class=\"text\">\r\n                                        {#if [\"link\", \"web\"].indexOf(i) !== -1}\r\n                                            <a class=\"wrap\" target=\"_blank\" href={data[i]}>{data[i]}</a>\r\n                                        {:else}\r\n                                            {data[i]}\r\n                                        {/if}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        {/if}\r\n                    {/each}\r\n                </div>\r\n            {/if}\r\n        </div>\r\n    {:else if show === \"add\"}\r\n        <button class=\"btn\" on:click={() => (show = \"new\")}>\r\n            <i class=\"fa fa-plus\" />\r\n            <span>{lang(\"add-password\")}</span>\r\n        </button>\r\n    {/if}\r\n</div>\r\n\r\n<style>\r\n    .box-pswd {\r\n        background-color: var(--vscode-button-secondaryBackground);\r\n        color: var(--vscode-button-secondaryForeground);\r\n    }\r\n    .bg-box {\r\n        background-color: var(--vscode-keybindingLabel-background);\r\n    }\r\n    .other {\r\n        width: 100%;\r\n        padding-left: 5px;\r\n        font-size: 0.9rem;\r\n        background-color: var(--vscode-keybindingLabel-background);\r\n    }\r\n    .other span {\r\n        display: block;\r\n        border-top: 1px solid var(--vscode-editorWidget-background);\r\n        font-size: 0.7rem;\r\n        opacity: 0.7;\r\n    }\r\n    .xicon.copy {\r\n        display: block;\r\n        margin-top: 8px;\r\n        font-size: 1rem;\r\n    }\r\n    .other div.text {\r\n        font-size: 0.9rem;\r\n        padding-bottom: 2px;\r\n    }\r\n    .other div.text {\r\n        width: calc(100% - 34px);\r\n        display: block;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n    .toobars {\r\n        background-color: var(--vscode-keybindingLabel-background);\r\n        border-top: 1px solid var(--vscode-editorWidget-background);\r\n        text-align: right;\r\n        padding: 2px;\r\n    }\r\n    .box-password {\r\n        background-color: var(--vscode-button-secondaryBackground);\r\n        color: var(--vscode-button-secondaryForeground);\r\n        padding: 2px;\r\n        margin-top: 5px;\r\n    }\r\n    .box-password .title {\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        margin-left: 45px;\r\n        font-size: 0.7rem;\r\n        opacity: 0.7;\r\n    }\r\n    .box-password input {\r\n        height: 21px;\r\n        margin-bottom: 0px;\r\n    }\r\n\r\n    .xicon {\r\n        font-size: 0.9rem;\r\n        padding: 2px;\r\n        margin: 2px;\r\n        cursor: pointer;\r\n        opacity: 0.5;\r\n    }\r\n\r\n    .xicon:hover {\r\n        opacity: 1;\r\n    }\r\n    .x-label {\r\n        font-size: 0.8rem;\r\n        opacity: 0.5;\r\n    }\r\n    input:disabled {\r\n        text-decoration: line-through;\r\n        background-color: transparent;\r\n    }\r\n    select,\r\n    input {\r\n        height: 26px;\r\n        margin-bottom: 4px;\r\n        font-size: 0.9rem;\r\n        padding-top: 2px;\r\n    }\r\n    button {\r\n        font-size: 0.9rem;\r\n    }\r\n    .icon {\r\n        width: 22px;\r\n        height: 26px;\r\n        margin-right: 3px;\r\n    }\r\n    .btn-cancel {\r\n        background-color: var(--vscode-button-secondaryBackground);\r\n        color: var(--vscode-button-secondaryForeground);\r\n    }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import Spinner from \"./components/Spinner.svelte\";\r\n  import Session from \"../services/Session\";\r\n  import State from \"../services/State\";\r\n  import Command from \"../services/Command\";\r\n  import Page from \"../services/Page\";\r\n  import Lang from \"../services/Lang\";\r\n\r\n  let loading = true;\r\n  let data = [];\r\n\r\n  const opneSession = function (rs) {\r\n    Session.login(rs, (success) => {\r\n      if (success) {\r\n        Page.put(\"keys\");\r\n      } else {\r\n        //\r\n      }\r\n    });\r\n  };\r\n\r\n  const newDocument = () => {\r\n    Command.send(\"keys/new\", (name) => {\r\n      opneSession({ file: name });\r\n    });\r\n  };\r\n\r\n  const openDocument = () => {\r\n    Command.send(\"keys/open\", (name) => {\r\n      opneSession({ file: name });\r\n    });\r\n  };\r\n\r\n  const selKeys = (name) => {\r\n    opneSession({ file: name });\r\n  };\r\n\r\n  onMount(() => {\r\n    State.drop();\r\n    Command.send(\"keys/recent\", (rs) => {\r\n      data = rs;\r\n      loading = false;\r\n    });\r\n  });\r\n</script>\r\n\r\n{#if loading}\r\n  <Spinner />\r\n{:else}\r\n  <button type=\"button\" class=\"m1\" on:click={newDocument}>{Lang.get(\"create-keychain\")}</button>\r\n  <button type=\"button\" class=\"m1\" on:click={openDocument}>{Lang.get(\"open-keychain\")}</button>\r\n  {#if data.length}\r\n    <h4 class=\"m1\">{Lang.get(\"recent\")}:</h4>\r\n    <div class=\"m1 box-recent\">\r\n      {#each data as dd}\r\n        <div on:click={() => selKeys(dd)}>{dd}</div>\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n{/if}\r\n\r\n<style>\r\n  .box-recent div {\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import Lang from \"../services/Lang\";\r\n  import Page from \"../services/Page\";\r\n  import Session from \"../services/Session\";\r\n\r\n  const handleCancel = () => Page.back();\r\n  const handleExitSession = () => {\r\n    Session.drop();\r\n  };\r\n</script>\r\n\r\n<div class=\"box-content\">\r\n  <h3 class=\" p2\">{Lang.get(\"are-you-sure-to-close\")}</h3>\r\n  <div class=\"clearfix\">\r\n    <div class=\"col col-6 center\">\r\n      <input type=\"button\" class=\"btn\" value={Lang.get(\"cancel\")} on:click={handleCancel} />\r\n    </div>\r\n    <div class=\"col col-6 center\">\r\n      <button type=\"button\" on:click={handleExitSession}>{Lang.get(\"close\")}</button>\r\n    </div>\r\n  </div>\r\n  <div />\r\n</div>\r\n\r\n<style>\r\n  .box-content {\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  input,\r\n  button {\r\n    display: inline-block;\r\n    width: 90%;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import {tick, createEventDispatcher } from \"svelte\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let text;\r\n\r\n  let textarea;\r\n\r\n  async function copy() {\r\n    textarea.select();\r\n    document.execCommand(\"Copy\");\r\n    await tick();\r\n    textarea.blur();\r\n    dispatch(\"copy\");\r\n  }\r\n</script>\r\n\r\n<slot {copy} />\r\n<textarea bind:this={textarea} value={text} />\r\n\r\n<style>\r\n  textarea {\r\n    left: 0;\r\n    bottom: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n    opacity: 0;\r\n    width: 1px;\r\n    height: 1px;\r\n    border: none;\r\n    display: block;\r\n    position: absolute;\r\n  }\r\n</style>",
    "<script>\r\n    let size = 50,\r\n        thickness = 3,\r\n        speed = 2000;\r\n</script>\r\n\r\n<svg\r\n    class=\"spinner\"\r\n    viewBox=\"0 0 50 50\"\r\n    width={size}\r\n    height={size}\r\n    style=\"--speed: {speed}ms\"\r\n>\r\n    <circle\r\n        class=\"path\"\r\n        cx=\"25\"\r\n        cy=\"25\"\r\n        r=\"20\"\r\n        fill=\"none\"\r\n        stroke-width={thickness}\r\n    />\r\n</svg>\r\n\r\n<style>\r\n    .spinner {\r\n        animation: rotate var(--speed) linear infinite;\r\n        -webkit-animation: rotate var(--speed) linear infinite;\r\n        z-index: 2;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        margin: -35px 0 0 -35px;\r\n        width: 70px;\r\n        height: 70px;\r\n    }\r\n\r\n    .spinner .path {\r\n        /* \t\tstroke: hsl(210, 70, 75); */\r\n        stroke: dodgerblue;\r\n        stroke-linecap: round;\r\n        animation: dash calc(var(--speed) / 1.33) ease-in-out infinite;\r\n        -webkit-animation: dash calc(var(--speed) / 1.33) ease-in-out infinite;\r\n    }\r\n\r\n    @keyframes rotate {\r\n        100% {\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n\r\n    @keyframes dash {\r\n        0% {\r\n            stroke-dasharray: 1, 150;\r\n            stroke-dashoffset: 0;\r\n        }\r\n        50% {\r\n            stroke-dasharray: 90, 150;\r\n            stroke-dashoffset: -35;\r\n        }\r\n        100% {\r\n            stroke-dasharray: 90, 150;\r\n            stroke-dashoffset: -124;\r\n        }\r\n    }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "AAuBE,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,gBAAgB,CAAE,IAAI,WAAW,CAAC,AACpC,CAAC;ACVD,MAAM,cAAC,CAAC,AACN,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,iCAAiC,CAAC,AAC1D,CAAC;ACyED,KAAK,AAAC,CAAC,AACL,oBAAoB,CAAE,GAAG,AAC3B,CAAC,AACD,YAAY,cAAC,CAAC,AACZ,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,KAAK,CACb,QAAQ,CAAE,MAAM,CAChB,KAAK,CAAE,KAAK,CACZ,gBAAgB,CAAE,KAAK,AACzB,CAAC;ACmGD,MAAM,cAAC,CAAC,AACN,OAAO,CAAE,KAAK,CACd,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,GAAG,AACd,CAAC,AACD,oBAAM,MAAM,AAAC,CAAC,AACZ,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,IAAI,cAAC,CAAC,AACJ,SAAS,CAAE,MAAM,CACjB,KAAK,CAAE,KAAK,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,KAAK,CACd,WAAW,CAAE,GAAG,AAClB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,IAAI,AACd,CAAC,AACD,IAAI,cAAC,CAAC,AACJ,OAAO,CAAE,GAAG,AACd,CAAC,AACD,QAAQ,cAAC,CAAC,AACR,gBAAgB,CAAE,IAAI,mCAAmC,CAAC,CAC1D,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,gCAAgC,CAAC,CAC3D,OAAO,CAAE,GAAG,CACZ,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IAAI,AACd,CAAC,AACD,OAAO,cAAC,CAAC,AACP,gBAAgB,CAAE,IAAI,mCAAmC,CAAC,AAC5D,CAAC,AACD,MAAM,cAAC,CAAC,AACN,SAAS,CAAE,MAAM,AACnB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,iCAAiC,CAAC,CAC7C,SAAS,CAAE,MAAM,CACjB,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,GAAG,AACd,CAAC,AACD,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC,AACD,MAAM,cAAC,CAAC,AACN,KAAK,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CACxB,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,AACzB,CAAC;ACzFC,SAAS,8BAAC,CAAC,AACP,gBAAgB,CAAE,IAAI,mCAAmC,CAAC,CAC1D,KAAK,CAAE,IAAI,mCAAmC,CAAC,AACnD,CAAC,AACD,OAAO,8BAAC,CAAC,AACL,gBAAgB,CAAE,IAAI,mCAAmC,CAAC,AAC9D,CAAC,AACD,MAAM,8BAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,GAAG,CACjB,SAAS,CAAE,MAAM,CACjB,gBAAgB,CAAE,IAAI,mCAAmC,CAAC,AAC9D,CAAC,AACD,qBAAM,CAAC,IAAI,eAAC,CAAC,AACT,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,gCAAgC,CAAC,CAC3D,SAAS,CAAE,MAAM,CACjB,OAAO,CAAE,GAAG,AAChB,CAAC,AACD,MAAM,KAAK,8BAAC,CAAC,AACT,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,GAAG,CACf,SAAS,CAAE,IAAI,AACnB,CAAC,AACD,qBAAM,CAAC,GAAG,KAAK,eAAC,CAAC,AACb,SAAS,CAAE,MAAM,CACjB,cAAc,CAAE,GAAG,AACvB,CAAC,AACD,qBAAM,CAAC,GAAG,KAAK,eAAC,CAAC,AACb,KAAK,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CACxB,OAAO,CAAE,KAAK,CACd,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,AAC3B,CAAC,AACD,QAAQ,8BAAC,CAAC,AACN,gBAAgB,CAAE,IAAI,mCAAmC,CAAC,CAC1D,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,gCAAgC,CAAC,CAC3D,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,GAAG,AAChB,CAAC,AACD,aAAa,8BAAC,CAAC,AACX,gBAAgB,CAAE,IAAI,mCAAmC,CAAC,CAC1D,KAAK,CAAE,IAAI,mCAAmC,CAAC,CAC/C,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,GAAG,AACnB,CAAC,AACD,4BAAa,CAAC,MAAM,eAAC,CAAC,AAClB,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,MAAM,CACjB,OAAO,CAAE,GAAG,AAChB,CAAC,AACD,4BAAa,CAAC,KAAK,eAAC,CAAC,AACjB,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,AACtB,CAAC,AAED,MAAM,8BAAC,CAAC,AACJ,SAAS,CAAE,MAAM,CACjB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,GAAG,AAChB,CAAC,AAED,oCAAM,MAAM,AAAC,CAAC,AACV,OAAO,CAAE,CAAC,AACd,CAAC,AACD,QAAQ,8BAAC,CAAC,AACN,SAAS,CAAE,MAAM,CACjB,OAAO,CAAE,GAAG,AAChB,CAAC,AACD,mCAAK,SAAS,AAAC,CAAC,AACZ,eAAe,CAAE,YAAY,CAC7B,gBAAgB,CAAE,WAAW,AACjC,CAAC,AACD,oCAAM,CACN,KAAK,8BAAC,CAAC,AACH,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,AACpB,CAAC,AACD,MAAM,8BAAC,CAAC,AACJ,SAAS,CAAE,MAAM,AACrB,CAAC,AACD,KAAK,8BAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,GAAG,AACrB,CAAC,AACD,WAAW,8BAAC,CAAC,AACT,gBAAgB,CAAE,IAAI,mCAAmC,CAAC,CAC1D,KAAK,CAAE,IAAI,mCAAmC,CAAC,AACnD,CAAC;ACnNH,yBAAW,CAAC,GAAG,cAAC,CAAC,AACf,MAAM,CAAE,OAAO,AACjB,CAAC;ACxCD,YAAY,eAAC,CAAC,AACZ,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,AACzB,CAAC,AACD,oBAAK,CACL,MAAM,eAAC,CAAC,AACN,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,GAAG,AACZ,CAAC;ACXD,QAAQ,cAAC,CAAC,AACR,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CACT,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,CAAC,CACV,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,KAAK,CACd,QAAQ,CAAE,QAAQ,AACpB,CAAC;ACTC,QAAQ,8BAAC,CAAC,AACN,SAAS,CAAE,qBAAM,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,CAAC,QAAQ,CAC9C,iBAAiB,CAAE,qBAAM,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,CAAC,QAAQ,CACtD,OAAO,CAAE,CAAC,CACV,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,MAAM,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CACvB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AAChB,CAAC,AAED,uBAAQ,CAAC,KAAK,eAAC,CAAC,AAEZ,MAAM,CAAE,UAAU,CAClB,cAAc,CAAE,KAAK,CACrB,SAAS,CAAE,mBAAI,CAAC,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,QAAQ,CAC9D,iBAAiB,CAAE,mBAAI,CAAC,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,QAAQ,AAC1E,CAAC,AAED,WAAW,qBAAO,CAAC,AACf,IAAI,AAAC,CAAC,AACF,SAAS,CAAE,OAAO,MAAM,CAAC,AAC7B,CAAC,AACL,CAAC,AAED,WAAW,mBAAK,CAAC,AACb,EAAE,AAAC,CAAC,AACA,gBAAgB,CAAE,CAAC,CAAC,CAAC,GAAG,CACxB,iBAAiB,CAAE,CAAC,AACxB,CAAC,AACD,GAAG,AAAC,CAAC,AACD,gBAAgB,CAAE,EAAE,CAAC,CAAC,GAAG,CACzB,iBAAiB,CAAE,GAAG,AAC1B,CAAC,AACD,IAAI,AAAC,CAAC,AACF,gBAAgB,CAAE,EAAE,CAAC,CAAC,GAAG,CACzB,iBAAiB,CAAE,IAAI,AAC3B,CAAC,AACL,CAAC"
}