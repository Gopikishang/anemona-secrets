{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://vscode-anemona-secrets/./src/containers/SidebarProvider.ts","webpack://vscode-anemona-secrets/./src/extension.ts","webpack://vscode-anemona-secrets/./src/services/Core.ts","webpack://vscode-anemona-secrets/./src/services/Crypt.ts","webpack://vscode-anemona-secrets/./src/services/Keys.ts","webpack://vscode-anemona-secrets/./src/services/Pages.ts","webpack://vscode-anemona-secrets/./src/services/nonce.ts","webpack://vscode-anemona-secrets/external commonjs \"vscode\"","webpack://vscode-anemona-secrets/external node-commonjs \"crypto\"","webpack://vscode-anemona-secrets/external node-commonjs \"fs\"","webpack://vscode-anemona-secrets/external node-commonjs \"path\"","webpack://vscode-anemona-secrets/webpack/bootstrap","webpack://vscode-anemona-secrets/webpack/startup"],"sourcesContent":["/* eslint-disable curly */\r\nimport { ExtensionContext, Webview, WebviewViewProvider, WebviewView, TextDocument, Uri, window, commands } from \"vscode\";\r\nimport { getNonce } from \"../services/nonce\";\r\nimport Core from \"../services/Core\";\r\nimport Keys from \"../services/Keys\";\r\nimport Pages from \"../services/Pages\";\r\n\r\nexport class SidebarProvider implements WebviewViewProvider {\r\n\r\n  private readonly _extensionUri: Uri;\r\n  public _view?: WebviewView;\r\n  public _doc?: TextDocument;\r\n\r\n  constructor(private readonly _context: ExtensionContext, public core: Core) {\r\n    this.core = core;\r\n    this._extensionUri = this._context.extensionUri;\r\n  }\r\n\r\n  public page(name: string) {\r\n    this.command({ command: name, data: {} });\r\n  }\r\n\r\n  public async command(req: any) {\r\n    req = req ? req : {};\r\n    const cmd = req.command.split('/');\r\n    //console.log('vsc recibe: ', req);\r\n    this.core.initLang();\r\n    switch (cmd.shift()) {\r\n      case 'vars': return this.core.vars(cmd.shift(), req);\r\n      case 'session': return this.core.session(cmd, req);\r\n      case 'page': return Pages.self(this.core, cmd, req);\r\n      case 'keys': return Keys.self(this.core, cmd, req);\r\n    }\r\n    switch (req.command) {\r\n      case 'clear': return this.core.clear(req.content.id, req.content.data);\r\n      case \"reload\": return this.core.postCmd('reload'); //await this.core.cmdExe(this.core.name + '.refresh-en');\r\n      case \"onInfo\": return this.core.winMsgInfo(req.content);\r\n      case \"onError\": return this.core.winMsgError(req.content);\r\n    }\r\n  }\r\n  /**\r\n   * \r\n   * @param webviewView \r\n   */\r\n  public resolveWebviewView(webviewView: WebviewView) {\r\n    this._view = webviewView;\r\n    this.core?.setView(webviewView);\r\n    webviewView.webview.options = {\r\n      enableScripts: true,\r\n      localResourceRoots: [this._extensionUri],\r\n    };\r\n    webviewView.webview.html = this._getHtmlForWebview(webviewView.webview);\r\n    webviewView.webview.onDidReceiveMessage(async (req:any) => await this.command(req));\r\n  }\r\n  /**\r\n   * \r\n   * @param panel \r\n   */\r\n  public revive(panel: WebviewView) {\r\n    this._view = panel;\r\n  }\r\n  /**\r\n   * \r\n   * @param webview \r\n   * @returns \r\n   */\r\n  private _getHtmlForWebview(webview: Webview) {\r\n\r\n    this.core.path = '' + webview.asWebviewUri(Uri.joinPath(this._extensionUri));\r\n\r\n    const styleResetUri = webview.asWebviewUri(\r\n      Uri.joinPath(this._extensionUri, \"assets\", \"css/reset.css\")\r\n    );\r\n    const styleMainUri = webview.asWebviewUri(\r\n      Uri.joinPath(this._extensionUri, \"dist\", \"App.css\")\r\n    );\r\n    const styleVSCodeUri = webview.asWebviewUri(\r\n      Uri.joinPath(this._extensionUri, \"assets\", \"css/vscode.css\")\r\n    );\r\n    const styleBassCssUri = webview.asWebviewUri(\r\n      Uri.joinPath(this._extensionUri, \"assets\", \"plugins/basscss/basscss.min.css\")\r\n    );\r\n    const fontawesomeV6CssUri = webview.asWebviewUri(\r\n      Uri.joinPath(this._extensionUri, \"assets\", \"plugins/fontawesome-6/css/all.min.css\")\r\n    );\r\n    //Javascript\r\n    const scriptUri = webview.asWebviewUri(\r\n      Uri.joinPath(this._extensionUri, \"dist\", \"App.js\")\r\n    );\r\n\r\n    // Use a nonce to only allow a specific script to be run.\r\n    const nonce = getNonce();\r\n\r\n    return `<!DOCTYPE html>\r\n\t  <html lang=\"en\">\r\n\t  \t<head>\r\n\t  \t    <meta charset=\"UTF-8\">\r\n          <meta http-equiv=\"Content-Security-Policy\" content=\" font-src ${webview.cspSource}; style-src ${webview.cspSource}; script-src 'nonce-${nonce}';\">\r\n\t  \t    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\t  \t    <link href=\"${styleResetUri}\" rel=\"stylesheet\">\r\n\t  \t    <link href=\"${styleVSCodeUri}\" rel=\"stylesheet\">\r\n          <link href=\"${styleMainUri}\" rel=\"stylesheet\">\r\n          <link href=\"${styleBassCssUri}\" rel=\"stylesheet\">\r\n          <link href=\"${fontawesomeV6CssUri}\" rel=\"stylesheet\">\r\n\t  \t</head>\r\n        <body id=\"sidebar\">\r\n           <script nonce=\"${nonce}\" src=\"${scriptUri}\"></script>\r\n\t  \t</body>\r\n\t  </html>`;\r\n  }\r\n}","/* eslint-disable curly */\r\nimport { ExtensionContext, window } from \"vscode\";\r\nimport { SidebarProvider } from \"./containers/SidebarProvider\";\r\nimport Core from \"./services/Core\";\r\n\r\nexport function activate(context: ExtensionContext) {\r\n  const core = new Core('vscode-anemona-secrets', context);\r\n  const ext = core.name;\r\n  const sidebarProvider = new SidebarProvider(context, core);\r\n  context.subscriptions.push(\r\n    window.registerWebviewViewProvider(ext + '-sidebar', sidebarProvider),\r\n    core.cmdReg(ext + '.keys', () => sidebarProvider.page('page/keys')),\r\n    core.cmdReg(ext + '.about', () => sidebarProvider.page('page/about')),\r\n    core.cmdReg(ext + '.logout', () => sidebarProvider.page('page/logout')),\r\n  );\r\n}\r\n\r\nexport function deactivate() {\r\n  //Services.dispose();\r\n}\r\n","/* eslint-disable @typescript-eslint/naming-convention */\r\n/* eslint-disable curly */\r\nimport { ExtensionContext, WebviewView, commands, window, env } from \"vscode\";\r\nimport { existsSync } from 'fs';\r\nimport { basename, dirname } from 'path';\r\n\r\ntype FunCallPage = (data: any, opc: number) => {};\r\n\r\nexport default class Core {\r\n    public static id: string = 'iH5421';\r\n    private ses: any;\r\n    public ver: string = '0.0.8';\r\n    public data: any;\r\n    public author: any;\r\n    public lang: string = env.language || 'en';\r\n    public path: string;\r\n    public cmdExe = commands.executeCommand;\r\n    public cmdReg = commands.registerCommand;\r\n\r\n    constructor(\r\n        public name: string,\r\n        public context: ExtensionContext,\r\n        public view?: WebviewView\r\n    ) {\r\n        this.ses = {\r\n            id: name + '.session'\r\n        };\r\n        this.ver = require('../../package.json')['version'];\r\n        this.author = require('../../package.json')['author'];\r\n        this.path = '';\r\n        this.data = null;\r\n        this.setMenu(1);\r\n    }\r\n\r\n    public get(id: string) {\r\n        return this.getStsGlobal(this.ses.id + id);\r\n    }\r\n\r\n    public set(id: string, data: any) {\r\n        this.setStsGlobal(this.ses.id + id, data);\r\n    }\r\n\r\n    public updSession(data: any) {\r\n        this.dataSession(data);\r\n    }\r\n\r\n    public loadSession(): any {\r\n        this.data = this.data ? this.data : this.getStsGlobal(this.ses.id);\r\n    }\r\n\r\n    public dataSession(data: any) {\r\n        this.data = data;\r\n        this.setStsGlobal(this.ses.id, this.data);\r\n    }\r\n\r\n    public async loginSession(data: any, callback: FunCallPage) {\r\n        if (data && data.file) {\r\n            if (existsSync(data.file)) {\r\n                data.id = basename(data.file);\r\n                data.name = data.id.replace('.secrets', '');\r\n                data.path = dirname(data.file);\r\n                this.setSession(data);\r\n                return callback(this.data, 2);\r\n            }\r\n        }\r\n        callback(null, 1);\r\n    }\r\n\r\n    public setSession(data: any) {\r\n        this.updSession(data);\r\n    }\r\n\r\n    public globalSession(callback: FunCallPage) {\r\n        this.loadSession();\r\n        if (this.data && this.data.id) {\r\n            const rd = this.data;\r\n            rd.lang = this.lang;\r\n            rd.success = true;\r\n            this.setSession(this.data);\r\n            callback(rd, 2);\r\n        } else {\r\n            callback({ success: false, lang: this.lang }, 1);\r\n        }\r\n    }\r\n\r\n    public initSession(data: any, callback: FunCallPage) {\r\n        this.setSession(data);\r\n        callback({ success: true, lang: this.lang }, 2);\r\n    }\r\n\r\n    public dropSession(callback: FunCallPage) {\r\n        this.data = null;\r\n        this.setStsGlobal('keys-anemona', []);\r\n        this.setStsGlobal(this.ses.id, this.data);\r\n        callback({ success: true }, 1);\r\n    }\r\n\r\n    public routeSession(cmd: [string], data: any, callback: any) {\r\n        switch (cmd.shift()) {\r\n            case \"global\": return this.globalSession(callback);\r\n            case \"init\": return this.initSession(data, callback);\r\n            case \"drop\": return this.dropSession(callback);\r\n            case \"login\": return this.loginSession(data, callback);\r\n        }\r\n    }\r\n\r\n    public session(cmd: [string], req: any) {\r\n        const _cmd = 'session/' + cmd.join('/');\r\n        this.postCmd('lang', this.lang);\r\n        this.routeSession(cmd, req.content, (data: any, opc: number) => {\r\n            this.setMenu(opc);\r\n            this.postCmd(_cmd, data || {});\r\n        });\r\n    }\r\n\r\n    public vars(id: string, req: any) {\r\n        //console.log('var:', id);\r\n        this.postCmd(req.command, this.getStsGlobal(id) || {});\r\n    }\r\n\r\n    public clear(type: string, data: any = null) {\r\n        this.setStsGlobal(type, data);\r\n    }\r\n\r\n    public initLang() {\r\n        this.lang = this.lang;\r\n    }\r\n\r\n    public loadLang(cmd: [string], req: any) {\r\n        this.postCmd(req.command, this.lang);\r\n    }\r\n\r\n    public setLang(lang: string) {\r\n        this.lang = lang;\r\n        this.setStsGlobal('lang', lang);\r\n    }\r\n\r\n    public getStsGlobal(key: string): any {\r\n        return this.context.globalState.get(key);\r\n    }\r\n\r\n    public setStsGlobal(key: string, data: any): void {\r\n        this.context.globalState.update(key, data);\r\n        this.context.globalState.setKeysForSync([key]);\r\n    }\r\n\r\n    public delStsGlobal(key: string): void {\r\n        this.context.globalState.update(key, undefined);\r\n    }\r\n\r\n    public setCtx(id: string, value: any): void {\r\n        this.cmdExe('setContext', this.name + '.' + id, value);\r\n    }\r\n\r\n    public setMenu(option: number): void {\r\n        this.setCtx('idMenuOption', option);\r\n    }\r\n\r\n    public postCmd(cmd: string, data: any = {}): void {\r\n        this.view?.webview.postMessage({ cmd: cmd, dat: data });\r\n    };\r\n\r\n    public setView(view: WebviewView) {\r\n        this.view = view;\r\n    };\r\n\r\n    public winMsgInfo(message: string | undefined) {\r\n        if (message) window.showInformationMessage(message);\r\n    }\r\n    public winMsgError(message: string | undefined) {\r\n        if (message) window.showErrorMessage(message);\r\n    }\r\n\r\n    public async winOpenFile(filters: any) {\r\n        return await window.showOpenDialog({\r\n            // title: title,\r\n            canSelectFiles: true,\r\n            canSelectFolders: false,\r\n            canSelectMany: false,\r\n            filters: { 'Files': filters }\r\n        });\r\n    }\r\n\r\n    public async winSaveFile(filters: any) {\r\n        return await window.showSaveDialog({\r\n            filters: { 'Files': filters }\r\n        });\r\n    }\r\n}","/* eslint-disable curly */\r\nimport Core from './Core';\r\nimport { createHash, createCipheriv, randomBytes, createDecipheriv } from \"crypto\";\r\n\r\nconst uid = ['6CFBD07E', '3737', '4D2B', 'BC9C', '1B0648ADAC21'];\r\nconst algorithm = ['aes', '256', 'cbc'];\r\n\r\nexport default class Crypt {\r\n\r\n  public static me?: Crypt;\r\n\r\n  constructor(private core: Core) { }\r\n\r\n  public static self(core?: Core, cmd?: [string], req?: any) {\r\n    if (!Crypt.me) Crypt.me = core ? new Crypt(core) : undefined;\r\n    if (Crypt.me && cmd) Crypt.me.router(cmd, req);\r\n    return Crypt.me;\r\n  }\r\n\r\n  public static md5(data: string) {\r\n    return createHash('md5').update(data).digest(\"hex\");\r\n  }\r\n\r\n  public static b64Encode(data: string) {\r\n    const buff = Buffer.from(data, 'utf-8');\r\n    return buff.toString('base64');\r\n  }\r\n\r\n  public static b64Decode(data: string) {\r\n    const buff = Buffer.from(data, 'base64');\r\n    return buff.toString('utf-8');\r\n  }\r\n\r\n  public static encode(text: string, key: string) {\r\n    key = Crypt.md5(Core.id + key + uid.join('-'));\r\n    const _iv = randomBytes(32).toString('base64').substring(0, 13);\r\n    let iv = Buffer.from(Crypt.md5(_iv), 'hex');\r\n    let cipher = createCipheriv(algorithm.join('-'), Buffer.from(key), iv);\r\n    let encrypted = cipher.update(text);\r\n    encrypted = Buffer.concat([encrypted, cipher.final()]);\r\n    return _iv + encrypted.toString('base64');\r\n  }\r\n\r\n  public static decode(text: string, key: string) {\r\n    key = Crypt.md5(Core.id + key + uid.join('-'));\r\n    let iv = Buffer.from(Crypt.md5(text.substring(0, 13)), 'hex');\r\n    let encryptedText = Buffer.from(text.substring(13), 'base64');\r\n    let decipher = createDecipheriv(algorithm.join('-'), Buffer.from(key), iv);\r\n    let decrypted = decipher.update(encryptedText);\r\n    decrypted = Buffer.concat([decrypted, decipher.final()]);\r\n    return decrypted.toString();\r\n  }\r\n\r\n  public async router(cmd: [string], req?: any) {\r\n    switch (cmd.shift()) {\r\n      case 'encode': return this.getEncode(req);\r\n      case 'decode': return this.getDecode(req);\r\n    }\r\n  }\r\n\r\n  public async getDecode(req: any) {\r\n    const rd = req.content;\r\n    let res = Crypt.decode(rd.data, rd.key);\r\n    if (rd.json) res = JSON.parse(res);\r\n    this.core.postCmd(req.command, res);\r\n  }\r\n\r\n  public async getEncode(req: any) {\r\n    const rd = req.content;\r\n    let res = Crypt.encode(rd.data, rd.key);\r\n    if (rd.json) res = JSON.parse(res);\r\n    this.core.postCmd(req.command, res);\r\n  }\r\n\r\n}","/* eslint-disable curly */\r\nimport Core from './Core';\r\nimport Crypt from './Crypt';\r\nimport { workspace, window } from 'vscode';\r\nimport { writeFileSync, readFileSync, existsSync } from 'fs';\r\n\r\nconst extension = 'keys-anemona';\r\n\r\nexport default class Keys {\r\n    public static me?: Keys;\r\n    constructor(private core: Core) { }\r\n\r\n    public static self(core?: Core, cmd?: [string], req?: any) {\r\n        if (!Keys.me) Keys.me = core ? new Keys(core) : undefined;\r\n        if (Keys.me && cmd) Keys.me.router(cmd, req);\r\n        return Keys.me;\r\n    }\r\n\r\n    public static putFileContent(file: string, rs: any) {\r\n        rs = rs || {};\r\n        writeFileSync(file, JSON.stringify(rs), { encoding: 'UTF-8' });\r\n    }\r\n\r\n    public static getFileContent(file: string) {\r\n        const content: any = readFileSync(file, { encoding: 'UTF-8' });\r\n        let rs: any = {};\r\n        try {\r\n            rs = JSON.parse(content);\r\n        } catch (err: any) {\r\n            rs = {};\r\n        }\r\n        return rs;\r\n    }\r\n\r\n    public async router(cmd: [string], req?: any) {\r\n        switch (cmd.shift()) {\r\n            case 'new': return this.newDocument(req);\r\n            case 'open': return this.openDocument(req);\r\n            case 'get': return this.getContent(req);\r\n            case 'save': return this.saveContent(req);\r\n            case 'lock': return this.lockContent(req);\r\n            case 'unlock': return this.unlockContent(req);\r\n            case 'export': return this.exportContent(req);\r\n            case 'recent': return this.recent(req);\r\n        }\r\n    }\r\n    /**\r\n     *  Agrega el archivo a las variables global de recientes\r\n     * @param file nombre absoluto del archivo\r\n     * @returns \r\n     */\r\n    public addRecent(file: string) {\r\n        if (!file) return;\r\n        let re = this.core.getStsGlobal('recent');\r\n        re = re instanceof Array ? re : [];\r\n        const idx = re.indexOf(file);\r\n        if (idx > -1) re.splice(idx, 1);\r\n        if (re.length > 20) re.pop();\r\n        re.unshift(file);\r\n        this.core.setStsGlobal('recent', re);\r\n    }\r\n    /**\r\n     * \r\n     * @param req \r\n     */\r\n    public async newDocument(req: any) {\r\n        let file: string = '';\r\n        const res = await this.core.winSaveFile(['secrets']);\r\n        if (res) {\r\n            //console.log('secret:', res);\r\n            file = res.fsPath;\r\n            const rs = { id: Crypt.md5(file) };\r\n            Keys.putFileContent(file, rs);\r\n        }\r\n        this.addRecent(file);\r\n        this.core.postCmd(req.command, file);\r\n    }\r\n    /**\r\n     * \r\n     * @param req \r\n     */\r\n    public async openDocument(req: any) {\r\n        let file: string = '';\r\n        const res = await this.core.winOpenFile(['secrets']);\r\n        if (res && res.length) {\r\n            file = res[0].fsPath;\r\n            this.addRecent(file);\r\n        }\r\n        this.core.postCmd(req.command, file);\r\n    }\r\n    /**\r\n     * Carga el contenido de un llavero\r\n     * @param req \r\n     */\r\n    public getContent(req: any) {\r\n        const rd = req.content;\r\n        let res: any = {};\r\n        if (existsSync(rd.file)) {\r\n            res = Keys.getFileContent(rd.file);\r\n            if (!res.id) {\r\n                res.id = res.id || Crypt.md5(rd.file);\r\n                Keys.putFileContent(rd.file, res);\r\n            }\r\n            if (!res.lock) {\r\n                if (res.data) res.data = JSON.parse(Crypt.decode(res.data, res.id));\r\n                else res.data = [];\r\n            }\r\n            if (res.clue) {\r\n                res.clue = Crypt.decode(res.clue, res.id);\r\n            }\r\n        } else {\r\n            res = { error: 404, message: 'El archivo \"' + rd.file + '\" no localizado...' };\r\n            this.core.winMsgError(res.message);\r\n        }\r\n        this.core.postCmd(req.command, res);\r\n    }\r\n    /**\r\n     * Guarda el contenido de un llavero\r\n     * @param req \r\n     */\r\n    public async saveContent(req: any) {\r\n        const rd = req.content;\r\n        rd.data.lock = false;\r\n        let rs: any = rd.data;\r\n        rs.data = Crypt.encode(JSON.stringify(rd.data.data), rs.id);\r\n        Keys.putFileContent(rd.key.file, rs);\r\n        this.core.postCmd(req.command, { success: true });\r\n    }\r\n    /**\r\n     * Exportar llaves\r\n     * @param req \r\n     */\r\n    public async exportContent(req: any) {\r\n        const rd = req.content;\r\n        let content: any = '';\r\n        if (rd.format === 'txt') {\r\n            for (const x in rd.data) {\r\n                content += \"\\n\";\r\n                for (const id in rd.data[x])\r\n                    content += \"\\n\" + id + \": \" + rd.data[x][id];\r\n            }\r\n        } else {\r\n            content = rd.data;\r\n            if (rd.format === 'key') {\r\n                const uid = Crypt.md5(Math.random() + extension);\r\n                content = {\r\n                    type: extension,\r\n                    uid: uid,\r\n                    data: Crypt.encode(JSON.stringify(rd.data), uid + extension)\r\n                };\r\n            }\r\n            content = JSON.stringify(content, null, 4);\r\n        }\r\n        const doc = await workspace.openTextDocument({ content: content, language: rd.format === 'txt' ? 'txt' : 'json' });\r\n        await window.showTextDocument(doc);\r\n        this.core.postCmd(req.command, { success: true });\r\n    }\r\n    /**\r\n     * Desbloquea un llavero\r\n     * @param req \r\n     * @returns \r\n     */\r\n    public async unlockContent(req: any) {\r\n        const rd = req.content;\r\n        const key = rd.key;\r\n        const rs = rd.data;\r\n        let code: any = '';\r\n        if (!rd.pwd) this.core.postCmd(req.command, { error: true });\r\n        try {\r\n            code = Crypt.decode(rs.data, rd.pwd + rs.id);\r\n        } catch (err) {\r\n            return this.core.postCmd(req.command, { error: true });\r\n        }\r\n        const res: any = {\r\n            id: rs.id,\r\n            lock: false,\r\n            data: Crypt.encode(code, rs.id),\r\n            order: rs.order ? 1 : 0\r\n        };\r\n        Keys.putFileContent(key.file, res);\r\n        res.data = JSON.parse(code);\r\n        this.core.postCmd(req.command, res);\r\n    }\r\n    /**\r\n     *  Bloque una llavero\r\n     * @param req \r\n     */\r\n    public lockContent(req: any) {\r\n        const rd = req.content;\r\n        const key = rd.key;\r\n        const rs = rd.data;\r\n        //console.log('data content:::>>> ', rs);\r\n        if (!rd.pwd) this.core.postCmd(req.command, { error: true });\r\n        rs.data = Crypt.encode(JSON.stringify(rs.data), rd.pwd + rs.id);\r\n        rs.lock = true;\r\n        rs.clue = Crypt.encode(rd.clue || '*', rs.id);\r\n        Keys.putFileContent(key.file, rs);\r\n        rs.clue = '*';\r\n        this.core.postCmd(req.command, rs);\r\n    }\r\n\r\n    public recent(req: any) {\r\n        const rs: any = this.core.getStsGlobal('recent') || [];\r\n        const rd: any = [];\r\n        if (rs.length) {\r\n            let ex = false;\r\n            for (const x in rs) {\r\n                if (existsSync(rs[x])) rd.push(rs[x]);\r\n                else ex = true;\r\n            }\r\n            if (ex) {\r\n                this.core.setStsGlobal('recent', rd);\r\n            }\r\n        }\r\n        this.core.postCmd(req.command, rd);\r\n    }\r\n}","/* eslint-disable curly */\r\nimport Core from './Core';\r\n\r\nexport default class Pages {\r\n\r\n    public static me?: Pages;\r\n\r\n    constructor(private core: Core) { }\r\n\r\n    public static self(core?: Core, cmd?: [string], req?: any) {\r\n        if (!Pages.me) Pages.me = core ? new Pages(core) : undefined;\r\n        if (Pages.me && cmd) Pages.me.router(cmd, req);\r\n        return Pages.me;\r\n    }\r\n\r\n    public async router(cmd: [string], req?: any) {\r\n        switch (cmd.shift()) {\r\n            case 'about': return this.core.postCmd('page/about');\r\n            case 'keys': return this.core.postCmd('page/keys');\r\n            case 'logout': return this.core.postCmd('page/logout');\r\n            case 'login': return this.core.postCmd('page/login');\r\n            case 'langEs': return this.changeLanguage('es');\r\n            case 'langEn': return this.changeLanguage('en');\r\n        }\r\n    }\r\n\r\n    public async changeLanguage(lang: string) {\r\n        this.core.setLang(lang);\r\n        if (this.core.data && this.core.data.id) this.core.setMenu(2);\r\n        else this.core.setMenu(1);\r\n        await this.core.cmdExe(this.core.name + '.refresh');\r\n    }\r\n\r\n}","export function getNonce() {\r\n\tlet text = '';\r\n\tconst possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\tfor (let i = 0; i < 32; i++) {\r\n\t\ttext += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\t}\r\n\treturn text;\r\n}","module.exports = require(\"vscode\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(112);\n"],"names":["constructor","_context","core","this","_extensionUri","extensionUri","page","name","command","data","req","cmd","split","initLang","shift","vars","session","self","clear","content","id","postCmd","winMsgInfo","winMsgError","resolveWebviewView","webviewView","_view","setView","webview","options","enableScripts","localResourceRoots","html","_getHtmlForWebview","onDidReceiveMessage","revive","panel","path","asWebviewUri","Uri","joinPath","styleResetUri","styleMainUri","styleVSCodeUri","styleBassCssUri","fontawesomeV6CssUri","scriptUri","nonce","getNonce","cspSource","context","ext","sidebarProvider","SidebarProvider","subscriptions","push","window","registerWebviewViewProvider","cmdReg","Core","view","ver","lang","env","language","cmdExe","commands","executeCommand","registerCommand","ses","author","setMenu","get","getStsGlobal","set","setStsGlobal","updSession","dataSession","loadSession","loginSession","callback","file","existsSync","basename","replace","dirname","setSession","globalSession","rd","success","initSession","dropSession","routeSession","_cmd","join","opc","type","loadLang","setLang","key","globalState","update","setKeysForSync","delStsGlobal","undefined","setCtx","value","option","postMessage","dat","message","showInformationMessage","showErrorMessage","winOpenFile","filters","showOpenDialog","canSelectFiles","canSelectFolders","canSelectMany","winSaveFile","showSaveDialog","uid","algorithm","Crypt","static","me","router","createHash","digest","Buffer","from","toString","text","md5","_iv","randomBytes","substring","iv","cipher","createCipheriv","encrypted","concat","final","encryptedText","decipher","createDecipheriv","decrypted","getEncode","getDecode","res","decode","json","JSON","parse","encode","extension","Keys","rs","writeFileSync","stringify","encoding","readFileSync","err","newDocument","openDocument","getContent","saveContent","lockContent","unlockContent","exportContent","recent","addRecent","re","Array","idx","indexOf","splice","length","pop","unshift","fsPath","putFileContent","getFileContent","lock","clue","error","format","x","Math","random","doc","workspace","openTextDocument","showTextDocument","code","pwd","order","ex","Pages","changeLanguage","possible","i","charAt","floor","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}