{"version":3,"file":"App.js","sources":["../node_modules/svelte/internal/index.mjs","../webviews/App/components/Spinner.svelte","../webviews/services/vscode.ts","../webviews/services/State.ts","../webviews/services/Command.ts","../webviews/services/Lang.ts","../webviews/services/Page.ts","../webviews/services/Session.ts","../webviews/App/Login.svelte","../webviews/App/About.svelte","../webviews/App/Logout.svelte","../webviews/App/components/Clipboard.svelte","../webviews/App/Keys/Element.svelte","../webviews/App/Keys/Content.svelte","../webviews/App/Keys.svelte","../webviews/App/Bye.svelte","../webviews/App/Index.svelte","../webviews/App.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\r\n    let size = 50,\r\n        thickness = 3,\r\n        speed = 2000;\r\n</script>\r\n\r\n<svg\r\n    class=\"spinner\"\r\n    viewBox=\"0 0 50 50\"\r\n    width={size}\r\n    height={size}\r\n    style=\"--speed: {speed}ms\"\r\n>\r\n    <circle\r\n        class=\"path\"\r\n        cx=\"25\"\r\n        cy=\"25\"\r\n        r=\"20\"\r\n        fill=\"none\"\r\n        stroke-width={thickness}\r\n    />\r\n</svg>\r\n\r\n<style>\r\n    .spinner {\r\n        animation: rotate var(--speed) linear infinite;\r\n        -webkit-animation: rotate var(--speed) linear infinite;\r\n        z-index: 2;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        margin: -35px 0 0 -35px;\r\n        width: 70px;\r\n        height: 70px;\r\n    }\r\n\r\n    .spinner .path {\r\n        /* \t\tstroke: hsl(210, 70, 75); */\r\n        stroke: dodgerblue;\r\n        stroke-linecap: round;\r\n        animation: dash calc(var(--speed) / 1.33) ease-in-out infinite;\r\n        -webkit-animation: dash calc(var(--speed) / 1.33) ease-in-out infinite;\r\n    }\r\n\r\n    @keyframes rotate {\r\n        100% {\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n\r\n    @keyframes dash {\r\n        0% {\r\n            stroke-dasharray: 1, 150;\r\n            stroke-dashoffset: 0;\r\n        }\r\n        50% {\r\n            stroke-dasharray: 90, 150;\r\n            stroke-dashoffset: -35;\r\n        }\r\n        100% {\r\n            stroke-dasharray: 90, 150;\r\n            stroke-dashoffset: -124;\r\n        }\r\n    }\r\n</style>\r\n","export const vscode = acquireVsCodeApi();\r\n","/* eslint-disable curly */\r\nimport { vscode } from \"./vscode\";\r\nexport default class State {\r\n    static addEventListener(funcPage) {\r\n        State.funcEvent = funcPage;\r\n    }\r\n    static run(cmd, data) {\r\n        State.funcEvent(cmd, data);\r\n    }\r\n    static drop() {\r\n        State.rd = {};\r\n        vscode.setState(State.rd);\r\n    }\r\n    static get(id, val = null) {\r\n        if (State.rd[id])\r\n            return State.rd[id];\r\n        State.rd = vscode.getState() || {};\r\n        if (State.rd[id])\r\n            return State.rd[id];\r\n        if (val !== null) {\r\n            State.set(id, val);\r\n            return val;\r\n        }\r\n        return null;\r\n    }\r\n    static set(id, data) {\r\n        State.rd[id] = data;\r\n        vscode.setState(State.rd);\r\n    }\r\n    static dispatch(el, fun) {\r\n        if (el)\r\n            return fun(true);\r\n        window.setTimeout(() => {\r\n            if (typeof fun === 'function')\r\n                fun((ex) => {\r\n                    State.dispatch(ex, fun);\r\n                });\r\n        }, 100);\r\n    }\r\n}\r\nState.rd = {};\r\nState.funcEvent = (cmd, type) => { };\r\n;\r\n","import { vscode } from \"./vscode\";\r\nexport default class Command {\r\n    static call(rq) {\r\n        if (rq && rq.cmd) {\r\n            if (typeof Command.db[rq.cmd] === 'function') {\r\n                Command.db[rq.cmd](rq.dat || null);\r\n                Command.db[rq.cmd] = undefined;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    static clear(id, data = null) {\r\n        Command.send(\"clear\", { id: id, data: data });\r\n    }\r\n    static send(command, data = null, func = null) {\r\n        if (typeof data === 'function') {\r\n            func = data;\r\n            data = {};\r\n        }\r\n        const content = data || {};\r\n        if (typeof func === 'function') {\r\n            Command.db[command] = func;\r\n        }\r\n        return vscode.postMessage({ command: command, content: content });\r\n    }\r\n}\r\nCommand.db = {};\r\n","/* eslint-disable curly */\r\nimport langEs from \"../../assets/lang/es.json\";\r\nimport langEn from \"../../assets/lang/en.json\";\r\nexport default class Lang {\r\n    static key(name) {\r\n        const id = name.toLowerCase().replace(/[^a-z0-9-]/g, '');\r\n        ;\r\n        return Lang.get(id) || name;\r\n    }\r\n    static load(lang) {\r\n        if (lang === 'es')\r\n            Lang.rd = langEs;\r\n        else if (lang === 'en')\r\n            Lang.rd = langEn;\r\n        Lang.id = lang;\r\n    }\r\n    static get(key) {\r\n        if (!Lang.rd) {\r\n            Lang.rd = Lang.id === 'es' ? langEs : langEn;\r\n        }\r\n        return Lang.rd[key] || '';\r\n    }\r\n}\r\nLang.id = 'en';\r\nLang.rd = null;\r\n;\r\nexport const lang = Lang.get;\r\nexport const langKey = Lang.key;\r\n","/* eslint-disable curly */\r\nimport State from \"./State\";\r\nexport default class Page {\r\n    static clean() {\r\n        State.set('page', []);\r\n    }\r\n    static setScroll(id, time = 0) {\r\n        window.setTimeout(() => {\r\n            window.scrollTo(0, State.get('scroll_' + id) || 0);\r\n        }, time);\r\n    }\r\n    static addEventListener(funcPage) {\r\n        Page.funcEvent = funcPage;\r\n    }\r\n    static back() {\r\n        const page = Page.get() || 'dash';\r\n        Page.funcEvent(page, 'back');\r\n    }\r\n    static put(page) {\r\n        Page.funcEvent(page, 'put');\r\n    }\r\n    static set(page) {\r\n        const pp = State.get('page') || [];\r\n        if (!pp.length || pp[pp.length - 1] !== page) {\r\n            pp.push(page);\r\n            if (pp.length > 9)\r\n                pp.shift();\r\n            State.set('page', pp);\r\n        }\r\n    }\r\n    static get() {\r\n        let pp = State.get('page');\r\n        pp = pp instanceof Array ? pp : [];\r\n        let page = null;\r\n        if (pp.pop())\r\n            page = pp.pop();\r\n        State.set('page', pp);\r\n        return page;\r\n    }\r\n    static last() {\r\n        let pp = State.get('page') || [];\r\n        let page = pp.pop();\r\n        State.set('page', pp);\r\n        return page;\r\n    }\r\n}\r\nPage.pagLogin = 'login';\r\nPage.pagDash = 'dash';\r\nPage.funcEvent = (page, type) => { };\r\n","/* eslint-disable curly */\r\nimport State from \"./State\";\r\nimport Command from \"./Command\";\r\nimport Lang from \"./Lang\";\r\nimport Page from \"./Page\";\r\nlet rd = {};\r\nexport default class Session {\r\n    static set(data) {\r\n        rd = data;\r\n        State.set('session', rd);\r\n    }\r\n    static get() {\r\n        Session.load();\r\n        return rd;\r\n    }\r\n    static allow() {\r\n        return rd && rd.id ? rd.allow : false;\r\n    }\r\n    static load() {\r\n        rd = rd && rd.id ? rd : State.get('session') || {};\r\n    }\r\n    static wAuth() {\r\n        return Command.send(\"session/init\", rd, (rs) => {\r\n            //\r\n        });\r\n    }\r\n    static onAuth(rs) {\r\n        Lang.load(rs && rs.lang ? rs.lang : \"en\");\r\n        if (Session.isView) {\r\n            if (rs && rs.id) {\r\n                rs.id && Session.set(rs);\r\n                Page.put(Session.type);\r\n            }\r\n            else\r\n                Page.put('closed');\r\n        }\r\n        else {\r\n            if (rs && rs.success === true) {\r\n                rs.id && Session.set(rs);\r\n                const pag = Page.last();\r\n                Page.put(pag ? (pag !== 'login' ? pag : 'dash') : \"dash\");\r\n                State.run('refresh');\r\n            }\r\n            else\r\n                return Command.send(\"session/drop\", () => {\r\n                    Page.put(\"login\");\r\n                });\r\n        }\r\n    }\r\n    static auth(type) {\r\n        Session.isView = type !== 'sidebar';\r\n        Session.type = type;\r\n        Session.load();\r\n        if (Session.isView || (rd.id && rd.file)) {\r\n            return Command.send(\"session/init\", rd, (rs) => {\r\n                Session.onAuth(rs);\r\n            });\r\n        }\r\n        return Command.send(\"session/global\", (rs) => {\r\n            Session.onAuth(rs);\r\n        });\r\n    }\r\n    static login(rd, callback) {\r\n        Command.send(\"session/login\", rd, (session) => {\r\n            if (session && session.id) {\r\n                State.set(\"session\", session);\r\n                State.set(\"page\", []);\r\n                Command.send(\"reloads\");\r\n                callback(true);\r\n            }\r\n            callback(false);\r\n        });\r\n    }\r\n    static drop() {\r\n        rd = {};\r\n        State.set('session', rd);\r\n        Command.send(\"session/drop\", () => {\r\n            Page.put(\"login\");\r\n        });\r\n    }\r\n}\r\nSession.isView = false;\r\nSession.type = 'sidebar';\r\n","<script>\r\n  import { onMount } from \"svelte\";\r\n  import Spinner from \"./components/Spinner.svelte\";\r\n  import Session from \"../services/Session\";\r\n  import State from \"../services/State\";\r\n  import Command from \"../services/Command\";\r\n  import Page from \"../services/Page\";\r\n  import Lang from \"../services/Lang\";\r\n\r\n  let loading = true;\r\n  let data = [];\r\n\r\n  const opneSession = function (rs) {\r\n    Session.login(rs, (success) => {\r\n      if (success) {\r\n        Page.put(\"keys\");\r\n      } else {\r\n        //\r\n      }\r\n    });\r\n  };\r\n\r\n  const newDocument = () => {\r\n    Command.send(\"keys/new\", (name) => {\r\n      opneSession({ file: name });\r\n    });\r\n  };\r\n\r\n  const openDocument = () => {\r\n    Command.send(\"keys/open\", (name) => {\r\n      opneSession({ file: name });\r\n    });\r\n  };\r\n\r\n  const selKeys = (name) => {\r\n    opneSession({ file: name });\r\n  };\r\n\r\n  onMount(() => {\r\n    State.drop();\r\n    Command.send(\"keys/recent\", (rs) => {\r\n      data = rs;\r\n      loading = false;\r\n    });\r\n  });\r\n</script>\r\n\r\n{#if loading}\r\n  <Spinner />\r\n{:else}\r\n  <button type=\"button\" class=\"m1\" on:click={newDocument}>{Lang.get(\"create-keychain\")}</button>\r\n  <button type=\"button\" class=\"m1\" on:click={openDocument}>{Lang.get(\"open-keychain\")}</button>\r\n  {#if data.length}\r\n    <h4 class=\"m1\">{Lang.get(\"recent\")}:</h4>\r\n    <div class=\"m1 box-recent\">\r\n      {#each data as dd}\r\n        <div on:click={() => selKeys(dd)}>{dd}</div>\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n{/if}\r\n\r\n<style>\r\n  .box-recent div {\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n","<script>\r\n  import Lang from \"../services/Lang\";\r\n</script>\r\n\r\n<div class=\"m1\">\r\n  <div class=\"center\">\r\n    <span class=\"logo\" />\r\n    <div class=\"mb2\">\r\n      <strong>{Lang.get('password-manager')}</strong>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    {Lang.get(\"about-text\")}\r\n  </div>\r\n  <div class=\"opts mt2\">\r\n    <div class=\"mb2\"><strong>{Lang.get(\"contributing\")}</strong></div>\r\n    <p>\r\n      {Lang.get(\"please-create-an-issue\")}\r\n    </p>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .logo {\r\n    display: inline-block;\r\n    width: 171px;\r\n    height: 171px;\r\n    background-image: url(../logo.png);\r\n  }\r\n</style>\r\n","<script>\r\n  import Lang from \"../services/Lang\";\r\n  import Page from \"../services/Page\";\r\n  import Session from \"../services/Session\";\r\n\r\n  const handleCancel = () => Page.back();\r\n  const handleExitSession = () => {\r\n    Session.drop();\r\n  };\r\n</script>\r\n\r\n<div class=\"box-content\">\r\n  <h3 class=\" p2\">{Lang.get(\"are-you-sure-to-close\")}</h3>\r\n  <div class=\"clearfix\">\r\n    <div class=\"col col-6 center\">\r\n      <input type=\"button\" class=\"btn\" value={Lang.get(\"cancel\")} on:click={handleCancel} />\r\n    </div>\r\n    <div class=\"col col-6 center\">\r\n      <button type=\"button\" on:click={handleExitSession}>{Lang.get(\"close\")}</button>\r\n    </div>\r\n  </div>\r\n  <div />\r\n</div>\r\n\r\n<style>\r\n  .box-content {\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  input,\r\n  button {\r\n    display: inline-block;\r\n    width: 90%;\r\n  }\r\n</style>\r\n","<script>\r\n  import {tick, createEventDispatcher } from \"svelte\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let text;\r\n\r\n  let textarea;\r\n\r\n  async function copy() {\r\n    textarea.select();\r\n    document.execCommand(\"Copy\");\r\n    await tick();\r\n    textarea.blur();\r\n    dispatch(\"copy\");\r\n  }\r\n</script>\r\n\r\n<slot {copy} />\r\n<textarea bind:this={textarea} value={text} />\r\n\r\n<style>\r\n  textarea {\r\n    left: 0;\r\n    bottom: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n    opacity: 0;\r\n    width: 1px;\r\n    height: 1px;\r\n    border: none;\r\n    display: block;\r\n    position: absolute;\r\n  }\r\n</style>","<script>\r\n    import { onMount } from \"svelte\";\r\n    import Command from \"../../services/Command\";\r\n    import Clipboard from \"../components/Clipboard.svelte\";\r\n    import Lang, { lang, langKey } from \"../../services/Lang\";\r\n\r\n    export let id = \"\";\r\n    export let data = {};\r\n    export let type = \"add\";\r\n    export let onSave = (text) => {};\r\n\r\n    let show = \"new\";\r\n    let disabled = {};\r\n    let resp = {};\r\n    let passwd = null;\r\n    let open = false;\r\n\r\n    let items = [];\r\n    let options = [];\r\n    let opts = [\"nick\", \"email\", \"token\", \"host\", \"web\", \"link\", \"tel\", \"api\", \"ip\", \"port\", \"db-name\", \"notes\"];\r\n    let itemValue = \"0\";\r\n\r\n    const clone = (dd) => {\r\n        if (!dd) return {};\r\n        let rs = {};\r\n        for (const x in dd) rs[x] = dd[x];\r\n        return rs;\r\n    };\r\n    const getOptions = () => {\r\n        let idx = -1;\r\n        options = opts.concat([]);\r\n        items = [];\r\n        for (const name in data) {\r\n            if (name === \"password\" || name === \"title\") continue;\r\n            items.push(name);\r\n            idx = options.indexOf(name);\r\n            if (idx !== -1) options.splice(idx, 1);\r\n        }\r\n        items.sort();\r\n        options.sort();\r\n    };\r\n    const setShowData = (_data, _type, _resp) => {\r\n        show = _type || type;\r\n        data = _data || {};\r\n        resp = _resp || clone(_data) || {};\r\n        getOptions();\r\n    };\r\n    const onCancel = () => {\r\n        setShowData(clone(resp), type, resp);\r\n    };\r\n    const onShow = () => {\r\n        if (passwd) passwd.type = passwd.type === \"text\" ? \"password\" : \"text\";\r\n    };\r\n    const onEdit = () => {\r\n        onSave(id === \"add\" ? \"add\" : \"edit\", clone(data), (dd) => setShowData(id === \"add\" ? {} : dd, type), id);\r\n    };\r\n    const onDelete = () => {\r\n        onSave(\"del\", data, (dd) => setShowData({}), id);\r\n    };\r\n    const showEdit = () => {\r\n        setShowData(clone(resp), \"edit\", resp);\r\n    };\r\n    const onAddItem = () => {\r\n        if (itemValue !== \"0\") {\r\n            data[itemValue] = resp[itemValue] || data[itemValue] || \"\";\r\n            getOptions();\r\n        }\r\n    };\r\n    const onDelItem = (itm) => {\r\n        resp[itm] = data[itm];\r\n        delete data[itm];\r\n        getOptions();\r\n    };\r\n    onMount(() => {\r\n        setShowData(id === \"add\" ? {} : data, type, clone(data));\r\n        disabled = {\r\n            nick: !!data.nick,\r\n            link: !!data.link,\r\n            notes: !!data.notes,\r\n        };\r\n    });\r\n</script>\r\n\r\n<div>\r\n    {#if show === \"new\" || show === \"edit\"}\r\n        <form class=\"bg-box p1\" on:submit|preventDefault={onEdit}>\r\n            <input required bind:value={data.title} placeholder={lang(\"title\")} type=\"text\" />\r\n            <div class=\"flex\">\r\n                <button type=\"button\" class=\"icon\" on:click={onShow} title={lang(\"see-password\")}><i class=\"fa fa-eye\" /></button>\r\n                <input required bind:this={passwd} bind:value={data.password} placeholder={lang(\"password\")} type=\"password\" />\r\n            </div>\r\n            {#if options.length}\r\n                <div class=\"flex\">\r\n                    <select class=\"select\" bind:value={itemValue}>\r\n                        <option value=\"0\">{Lang.get('select-an-option')}</option>\r\n                        {#each options as op}\r\n                            <option value={op}>{Lang.get(op)}</option>\r\n                        {/each}\r\n                    </select>\r\n                    <button type=\"button\" class=\"icon\" on:click={onAddItem} title={lang(\"see-password\")}><i class=\"fa fa-plus\" /></button>\r\n                </div>\r\n            {/if}\r\n            {#each items as item}\r\n                <div>\r\n                    <span class=\"x-label\">{Lang.get(item)}:</span>\r\n                    <div class=\"flex\">\r\n                        <input type=\"text\" required=\"required\" bind:value={data[item]} placeholder={lang(item)} />\r\n                        <button type=\"button\" class=\"icon btn-cancel\" on:click={() => onDelItem(item)} title=\"Quitar\"><i class=\"fa-solid fa-xmark\" /></button>\r\n                    </div>\r\n                </div>\r\n            {/each}\r\n\r\n            <div class=\"flex mt2\">\r\n                <button class=\"btn-cancel\" type=\"button\" on:click={onCancel}>{lang(\"cancel\")}</button>\r\n                <button type=\"submit\">{lang(\"save\")}</button>\r\n            </div>\r\n        </form>\r\n    {:else if show === \"del\"}\r\n        <form class=\"bg-box p1\" on:submit|preventDefault={onDelete}>\r\n            <div class=\"flex\">\r\n                <input readonly bind:value={data.title} placeholder={lang(\"title\")} type=\"text\" />\r\n            </div>\r\n            <div class=\"flex mt2\">\r\n                <button class=\"btn-cancel\" type=\"button\" on:click={onCancel}>{lang(\"cancel\")}</button>\r\n                <button type=\"submit\">{lang(\"delete\")}</button>\r\n            </div>\r\n        </form>\r\n    {:else if show === \"item\"}\r\n        <div class=\"box-password\">\r\n            <div>\r\n                <div class=\"title\">{data.title}</div>\r\n            </div>\r\n            <div class=\"flex\">\r\n                <Clipboard text={data.password} let:copy on:copy={() => Command.send(\"onInfo\", lang(\"password-clipboard\"))}>\r\n                    <span class=\"xicon fa fa-copy\" title={lang(\"copy\")} on:click={copy} />\r\n                </Clipboard>\r\n                <span class=\"xicon fa fa-eye\" on:click={onShow} title={lang(\"see-password\")} />\r\n                <input class=\"box-pswd\" bind:this={passwd} type=\"password\" value={data.password} />\r\n                <span class=\"xicon show fas {open ? 'fa-angle-down' : 'fa-ellipsis'}\" on:click={() => (open = !open)} title={lang(\"options\")} />\r\n            </div>\r\n            {#if open}\r\n                <div class=\"toobars\">\r\n                    <span class=\"xicon far fa-trash-alt\" on:click={() => (show = \"del\")} title={lang(\"delete\")} />\r\n                    <span class=\"xicon fa fa-edit\" on:click={showEdit} title={lang(\"edit\")} />\r\n                </div>\r\n                <div class=\"\">\r\n                    {#each items as i}\r\n                        {#if i !== \"title\" && i !== \"password\"}\r\n                            <div class=\"flex\">\r\n                                <Clipboard text={data[i]} let:copy on:copy={() => Command.send(\"onInfo\", lang(\"have-copied\") + \": \" + langKey(i))}>\r\n                                    <span class=\"xicon copy fa fa-copy\" title={lang(\"copy\")} on:click={copy} />\r\n                                </Clipboard>\r\n                                <div class=\"other\">\r\n                                    <span>{langKey(i)}</span>\r\n                                    <div class=\"text\">\r\n                                        {#if [\"link\", \"web\"].indexOf(i) !== -1}\r\n                                            <a class=\"wrap\" target=\"_blank\" href={data[i]}>{data[i]}</a>\r\n                                        {:else}\r\n                                            {data[i]}\r\n                                        {/if}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        {/if}\r\n                    {/each}\r\n                </div>\r\n            {/if}\r\n        </div>\r\n    {:else if show === \"add\"}\r\n        <button class=\"btn\" on:click={() => (show = \"new\")}>\r\n            <i class=\"fa fa-plus\" />\r\n            <span>{lang(\"add-password\")}</span>\r\n        </button>\r\n    {/if}\r\n</div>\r\n\r\n<style>\r\n    .box-pswd {\r\n        background-color: var(--vscode-button-secondaryBackground);\r\n        color: var(--vscode-button-secondaryForeground);\r\n    }\r\n    .bg-box {\r\n        background-color: var(--vscode-keybindingLabel-background);\r\n    }\r\n    .other {\r\n        width: 100%;\r\n        padding-left: 5px;\r\n        font-size: 0.9rem;\r\n        background-color: var(--vscode-keybindingLabel-background);\r\n    }\r\n    .other span {\r\n        display: block;\r\n        border-top: 1px solid var(--vscode-editorWidget-background);\r\n        font-size: 0.7rem;\r\n        opacity: 0.7;\r\n    }\r\n    .xicon.copy {\r\n        display: block;\r\n        margin-top: 8px;\r\n        font-size: 1rem;\r\n    }\r\n    .other div.text {\r\n        font-size: 0.9rem;\r\n        padding-bottom: 2px;\r\n    }\r\n    .other div.text {\r\n        width: calc(100% - 34px);\r\n        display: block;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n    .toobars {\r\n        background-color: var(--vscode-keybindingLabel-background);\r\n        border-top: 1px solid var(--vscode-editorWidget-background);\r\n        text-align: right;\r\n        padding: 2px;\r\n    }\r\n    .box-password {\r\n        background-color: var(--vscode-button-secondaryBackground);\r\n        color: var(--vscode-button-secondaryForeground);\r\n        padding: 2px;\r\n        margin-top: 5px;\r\n    }\r\n    .box-password .title {\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        margin-left: 45px;\r\n        font-size: 0.7rem;\r\n        opacity: 0.7;\r\n    }\r\n    .box-password input {\r\n        height: 21px;\r\n        margin-bottom: 0px;\r\n    }\r\n\r\n    .xicon {\r\n        font-size: 0.9rem;\r\n        padding: 2px;\r\n        margin: 2px;\r\n        cursor: pointer;\r\n        opacity: 0.5;\r\n    }\r\n\r\n    .xicon:hover {\r\n        opacity: 1;\r\n    }\r\n    .x-label {\r\n        font-size: 0.8rem;\r\n        opacity: 0.5;\r\n    }\r\n    input:disabled {\r\n        text-decoration: line-through;\r\n        background-color: transparent;\r\n    }\r\n    select,\r\n    input {\r\n        height: 26px;\r\n        margin-bottom: 4px;\r\n        font-size: 0.9rem;\r\n        padding-top: 2px;\r\n    }\r\n    button {\r\n        font-size: 0.9rem;\r\n    }\r\n    .icon {\r\n        width: 22px;\r\n        height: 26px;\r\n        margin-right: 3px;\r\n    }\r\n    .btn-cancel {\r\n        background-color: var(--vscode-button-secondaryBackground);\r\n        color: var(--vscode-button-secondaryForeground);\r\n    }\r\n</style>\r\n","<script>\r\n  import Spinner from \"../components/Spinner.svelte\";\r\n  import Element from \"./Element.svelte\";\r\n  import { onMount } from \"svelte\";\r\n  import Command from \"../../services/Command\";\r\n  import State from \"../../services/State\";\r\n  import { lang } from \"../../services/Lang\";\r\n\r\n  export let key = {};\r\n\r\n  let data = [];\r\n  let content = {};\r\n  let current = {};\r\n  let lock = false;\r\n  let inpts = {};\r\n  let open = false;\r\n  let show = \"\";\r\n  let loading = true;\r\n  let order = true;\r\n  let inter = null;\r\n\r\n  const onShow = (ty) => {\r\n    if (ty === 1 && inpts.psw1) inpts.psw1.type = inpts.psw1.type === \"text\" ? \"password\" : \"text\";\r\n    else if (ty === 2 && inpts.psw2) inpts.psw2.type = inpts.psw2.type === \"text\" ? \"password\" : \"text\";\r\n  };\r\n\r\n  const onOpen = (ty) => {\r\n    open = !open;\r\n  };\r\n\r\n  const onExport = () => {\r\n    Command.send(\"keys/export\", { key: key, data: data, format: inpts.format }, (dd) => {\r\n      //\r\n    });\r\n  };\r\n\r\n  const onLock = () => {\r\n    if (inpts.password1 !== inpts.password2) {\r\n      Command.send(\"onInfo\", lang(\"passwords-must-be-the-same\"));\r\n    } else {\r\n      loading = true;\r\n      const rs = content;\r\n      rs.order = order ? 1 : 0;\r\n      rs.data = data;\r\n      Command.send(\"keys/lock\", { key: key, data: rs, pwd: inpts.password1, clue: inpts.clue || \"\" }, (dd) => {\r\n        lock = true;\r\n        loading = false;\r\n        open = false;\r\n        content = dd;\r\n        data = [];\r\n        inpts = {};\r\n      });\r\n    }\r\n  };\r\n\r\n  const onUnLock = () => {\r\n    loading = true;\r\n    Command.send(\"keys/unlock\", { key: key, data: content, pwd: inpts.password1 }, (dd) => {\r\n      if (dd.data && dd.data instanceof Array) {\r\n        content = dd;\r\n        data = content.data;\r\n        lock = false;\r\n        open = false;\r\n        inpts = {};\r\n      } else {\r\n        Command.send(\"onError\", lang(\"invalid-password\"));\r\n      }\r\n      loading = false;\r\n    });\r\n  };\r\n\r\n  const onSave = (id, fields, xfunc, idx) => {\r\n    if (id === \"cancel\") return xfunc();\r\n    loading = true;\r\n    if (id === \"add\") {\r\n      data = [fields].concat(data);\r\n      fields = {};\r\n    } else if (id === \"edit\") {\r\n      data[idx] = fields;\r\n      data = data.concat([]);\r\n    } else if (id === \"del\") {\r\n      data.splice(idx, 1);\r\n      data = data.concat([]);\r\n      fields = {};\r\n    }\r\n    content.data = data;\r\n    Command.send(\"keys/save\", { key: key, data: content }, (dd) => {\r\n      loading = false;\r\n      xfunc(fields);\r\n    });\r\n  };\r\n\r\n  const onOrder = () => {\r\n    if (inter) return;\r\n    inter = setTimeout(() => (inter = null), 500);\r\n    order = !order;\r\n    if (order) {\r\n      data.sort(function (a, b) {\r\n        a = a.title.toLowerCase();\r\n        b = b.title.toLowerCase();\r\n        return a < b ? -1 : a > b ? 1 : 0;\r\n      });\r\n    } else {\r\n      data.sort(function (a, b) {\r\n        a = a.title.toLowerCase();\r\n        b = b.title.toLowerCase();\r\n        return a > b ? -1 : a < b ? 1 : 0;\r\n      });\r\n    }\r\n    content.order = order ? 1 : 0;\r\n    content.data = data;\r\n    Command.send(\"keys/save\", { key: key, data: content }, (dd) => {\r\n      //\r\n    });\r\n    data = data.concat([]);\r\n  };\r\n\r\n  onMount(() => {\r\n    State.set(\"key\", key);\r\n    Command.send(\"keys/get\", key, (rs) => {\r\n      loading = false;\r\n      if (rs.message || rs.error) {\r\n        State.set(\"key\", undefined);\r\n        return false;\r\n      }\r\n      lock = rs.lock ? true : false;\r\n      content = rs;\r\n      order = rs.order ? true : false;\r\n      data = rs.lock ? [] : content.data || [];\r\n    });\r\n  });\r\n</script>\r\n\r\n{#if loading}\r\n  <Spinner />\r\n{:else if lock}\r\n  <div class=\"flex\">\r\n    <div class=\"title ml1\">{key.name}</div>\r\n  </div>\r\n  <form class=\"bg-box\" on:submit|preventDefault={onUnLock}>\r\n    <div class=\"flex\">\r\n      <button type=\"button\" class=\"icon\" on:click={() => onShow(1)} title={lang(\"see-password\")}><i class=\"fa fa-eye\" /></button>\r\n      <input required bind:this={inpts.psw1} bind:value={inpts.password1} placeholder={lang(\"password\")} type=\"password\" />\r\n    </div>\r\n    <div class=\"flex mt2\">\r\n      <button type=\"submit\">{lang(\"unlock\")}</button>\r\n    </div>\r\n    {#if content.clue && content.clue !== \"*\"}\r\n      <div class=\"note\">\r\n        {lang(\"hint-or-clue\")}: \"{content.clue}\"\r\n      </div>\r\n    {/if}\r\n  </form>\r\n{:else}\r\n  <div class=\"flex\">\r\n    <div class=\"title ml1\">{key.name}</div>\r\n    <span class=\"xicon fa-solid fa-arrow-up-{order ? 'a-z' : 'z-a'}\" on:click={onOrder} title={lang(\"sort-list\")} />\r\n    <span class=\"xicon show fas {open ? 'fa-angle-down' : 'fa-ellipsis'}\" on:click={onOpen} title={lang(\"options\")} />\r\n  </div>\r\n  {#if open}\r\n    <div class=\"toobars\">\r\n      <button class=\"btn\" on:click={() => (show = show == \"lock\" ? \"\" : \"lock\")} title={lang(\"lock-keychain\")}>\r\n        <span class=\"fa fa-lock-open\" />\r\n      </button>\r\n      <button class=\"btn\" on:click={() => (show = show == \"export\" ? \"\" : \"export\")} title={lang(\"export\")}>\r\n        <span class=\"fas fa-file-export\" />\r\n      </button>\r\n    </div>\r\n    {#if show === \"lock\"}\r\n      <form class=\"bg-box\" on:submit|preventDefault={onLock}>\r\n        <div class=\"flex\">\r\n          <button type=\"button\" class=\"icon\" on:click={() => onShow(1)} title={lang(\"see-password\")}><i class=\"fa fa-eye\" /></button>\r\n          <input required bind:this={inpts.psw1} bind:value={inpts.password1} placeholder={lang(\"password\")} type=\"password\" />\r\n        </div>\r\n        <div class=\"flex\">\r\n          <button type=\"button\" class=\"icon\" on:click={() => onShow(2)}><i class=\"fa fa-eye\" /></button>\r\n          <input required bind:this={inpts.psw2} bind:value={inpts.password2} placeholder={lang(\"confirm-password\")} type=\"password\" />\r\n        </div>\r\n        <div class=\"flex\">\r\n          <input bind:value={inpts.clue} placeholder={lang(\"hint-or-clue\")} type=\"text\" />\r\n        </div>\r\n        <div class=\"flex mt2\">\r\n          <button type=\"submit\">{lang(\"lock-keychain\")}</button>\r\n        </div>\r\n        <div class=\"note\">\r\n          <i class=\"fas fa-exclamation\" />\r\n          {lang(\"alert-lock-keys\")}\r\n        </div>\r\n      </form>\r\n    {:else if show === \"export\"}\r\n      <form class=\"bg-box\" on:submit|preventDefault={onExport}>\r\n        <div>\r\n          <select class=\"select\" bind:value={inpts.format}>\r\n            <option value=\"txt\">Plain text</option>\r\n            <option value=\"json\">Json</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"flex mt2\">\r\n          <button type=\"submit\">{lang(\"export\")}</button>\r\n        </div>\r\n      </form>\r\n    {/if}\r\n  {/if}\r\n  <div class=\"mt1\">\r\n    <Element type=\"add\" id=\"add\" data={current} {onSave} />\r\n    {#each data as dat, idx}\r\n      <Element type=\"item\" id={idx} data={dat} {onSave} />\r\n    {/each}\r\n  </div>\r\n{/if}\r\n\r\n<style>\r\n  .xicon {\r\n    display: block;\r\n    font-size: 1rem;\r\n    padding: 2px;\r\n    margin: 2px;\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n  }\r\n  .xicon:hover {\r\n    opacity: 1;\r\n  }\r\n  .btn {\r\n    font-size: 0.8rem;\r\n    float: right;\r\n    width: 22px;\r\n    height: 22px;\r\n    display: block;\r\n    margin-left: 2px;\r\n  }\r\n  input {\r\n    height: 26px;\r\n  }\r\n  form {\r\n    padding: 2px;\r\n  }\r\n  .toobars {\r\n    background-color: var(--vscode-keybindingLabel-background);\r\n    border-top: 1px solid var(--vscode-editorWidget-background);\r\n    padding: 2px;\r\n    width: 100%;\r\n    display: block;\r\n    height: 26px;\r\n  }\r\n  .bg-box {\r\n    background-color: var(--vscode-keybindingLabel-background);\r\n  }\r\n  button {\r\n    font-size: 0.9rem;\r\n  }\r\n  .note {\r\n    color: var(--vscode-textPreformat-foreground);\r\n    font-size: 0.8rem;\r\n    padding: 2px;\r\n    opacity: 0.7;\r\n  }\r\n  .icon {\r\n    width: 22px;\r\n    height: 26px;\r\n  }\r\n  .title {\r\n    width: calc(100% - 26px);\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n</style>\r\n","<script>\r\n    import ContentKey from \"./Keys/Content.svelte\";\r\n    import Session from \"../services/Session\";\r\n    let key = Session.get();\r\n</script>\r\n\r\n<main>\r\n    <ContentKey {key} />\r\n</main>","<script>\r\n  import Lang from \"../services/Lang\";\r\n</script>\r\n\r\n<div>\r\n  <span class=\"dizzy\" />\r\n  <div><strong>{Lang.get(\"unknown-problem-occurred\")}</strong></div>\r\n  <div class=\"opts mt2\">\r\n    <div>{Lang.get(\"alternatives\")}:</div>\r\n    <ul>\r\n      <li> &bull; {Lang.get(\"please-refresh\")}</li>\r\n      <li> &bull; {Lang.get(\"close-and-open\")}</li>\r\n      <li> &bull; {Lang.get(\"sign-out-and-sign\")}</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .dizzy {\r\n    display: block;\r\n    width: 48px;\r\n    height: 48px;\r\n    background-image: url(../assets/images/face-worried.png);\r\n  }\r\n</style>\r\n","<script>\r\n  import Spinner from \"./components/Spinner.svelte\";\r\n  import Login from \"./Login.svelte\";\r\n  import About from \"./About.svelte\";\r\n  import Logout from \"./Logout.svelte\";\r\n  import Page from \"../services/Page\";\r\n  import Lang from \"../services/Lang\";\r\n  import Command from \"../services/Command\";\r\n  import Session from \"../services/Session\";\r\n  import State from \"../services/State\";\r\n  import Keys from \"./Keys.svelte\";\r\n  import Bye from \"./Bye.svelte\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  let logs = \"\";\r\n  let vType = \"sidebar\";\r\n  let yScroll = 0;\r\n  let current = Spinner;\r\n  let idCurrent = \"spinner\";\r\n  let pages = {\r\n    about: About,\r\n    keys: Keys,\r\n    login: Login,\r\n    logout: Logout,\r\n  };\r\n\r\n  const saveScroller = () => {\r\n    yScroll = yScroll ? yScroll : State.get(\"scroll_\" + idCurrent, 0.01);\r\n    State.set(\"scroll_\" + idCurrent, yScroll);\r\n  };\r\n\r\n  const setComponet = (componet) => {\r\n    current = componet;\r\n  };\r\n\r\n  const onPage = (cmd, dat) => {\r\n    setComponet(Spinner);\r\n    idCurrent = cmd.shift();\r\n    let pag = pages;\r\n    if (idCurrent) {\r\n      if (pag[idCurrent] && idCurrent !== \"closed\") Page.set(idCurrent);\r\n      else {\r\n        if (vType === \"sidebar\" && idCurrent !== \"closed\") idCurrent = \"keys\";\r\n        else return setComponet(Bye);\r\n      }\r\n      return setComponet(pag[idCurrent]);\r\n    }\r\n    setComponet(Bye);\r\n  };\r\n\r\n  const addCommandListener = () => {\r\n    window.addEventListener(\"message\", async (event) => {\r\n      const rd = event.data || {};\r\n      if (Command.call(rd)) return;\r\n      const cmd = rd.cmd.split(\"/\");\r\n      switch (cmd.shift()) {\r\n        case \"reloads\":\r\n          Command.send(\"reloads\");\r\n          return start();\r\n        case \"reload\":\r\n          return start();\r\n        case \"lang\":\r\n          return Lang.load(rd.dat, rd.dat);\r\n        case \"loading\":\r\n          return setComponet(Spinner);\r\n      }\r\n      onPage(cmd);\r\n    });\r\n  };\r\n\r\n  const refresh = () => {\r\n    //\r\n  };\r\n  \r\n  const start = () => {\r\n    setComponet(Spinner);\r\n    Session.auth(vType);\r\n  };\r\n\r\n  onMount(() => {\r\n    vType = document.body.id;\r\n    Page.addEventListener((page) => onPage([page]));\r\n    addCommandListener();\r\n    start();\r\n  });\r\n</script>\r\n\r\n<div class=\"anemona-app\">\r\n  <svelte:component this={current} />\r\n</div>\r\n{#if logs !== \"\"}\r\n  <textarea rows=\"10\">{logs}</textarea>\r\n{/if}\r\n<svelte:window on:scroll={saveScroller} bind:scrollY={yScroll} />\r\n\r\n<style>\r\n  :root {\r\n    --container-paddding: 0px;\r\n  }\r\n  .anemona-app {\r\n    padding: 2px;\r\n    overflow-y: scroll; /* Hide vertical scrollbar */\r\n    overflow-x: hidden; /* Hide horizontal scrollbar */\r\n  }\r\n  textarea {\r\n    position: absolute;\r\n    bottom: 0px;\r\n    display: block;\r\n    widows: 100%;\r\n    height: 300px;\r\n    overflow: scroll;\r\n    color: black;\r\n    background-color: white;\r\n  }\r\n</style>\r\n","import App from \"./App/Index.svelte\";\r\n\r\nconst app = new App({\r\n  target: document.body,\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","select_option","select","option","__value","selected","selectedIndex","select_value","selected_option","querySelector","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","cancelable","callbacks","bubbles","e","createEvent","initCustomEvent","custom_event","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","seen_callbacks","Set","flushidx","saved_component","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","globalThis","global","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","key","important","thickness","size","speed","style","removeProperty","setProperty","svg","circle","vscode","acquireVsCodeApi","State","static","funcPage","funcEvent","cmd","rd","setState","id","val","getState","set","el","fun","setTimeout","ex","dispatch","Command","rq","db","dat","undefined","send","command","func","content","postMessage","Lang","toLowerCase","replace","get","lang","langEs","langEn","langKey","Page","time","scrollTo","page","pp","shift","pagLogin","pagDash","Session","load","allow","rs","isView","put","success","pag","last","file","onAuth","session","if_block","create_if_block_1","button0","button1","h4","div","t","t_value","loading","opneSession","login","selKeys","drop","$$invalidate","dd","div5","div1","span","div0","strong0","div2","div4","div3","strong1","h3","button","back","slot_ctx","textarea_1","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","merged","len","Math","max","textarea","execCommand","blur","$$value","textContent","t0_value","title","password","create_if_block_4","span0","input_value_value","span1","current","t0","clipboard_changes","form","button2","input0","input1","apply","arguments","span0_title_value","span1_title_value","each_blocks","t1_value","show_if","t1","a_href_value","create_if_block_5","button_title_value","input_placeholder_value","onSave","show","resp","passwd","open","items","opts","itemValue","clone","x","getOptions","idx","concat","sort","setShowData","_data","_type","_resp","onDelItem","itm","nick","link","notes","item","create_if_block_3","clue","create_if_block_2","password1","button0_title_value","button1_title_value","format","option0","option1","t8_value","input2","i0","password2","i2","t2_value","t2","lock","inpts","order","inter","onShow","ty","psw1","psw2","message","error","pwd","fields","xfunc","main","strong","ul","li0","li1","li2","vType","yScroll","Spinner","idCurrent","pages","about","About","Keys","Login","logout","Logout","setComponet","componet","onPage","Bye","start","auth","body","split","app"],"mappings":"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"}